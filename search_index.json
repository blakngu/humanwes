[["index.html", "Human Whole Exome Analysis Notas y “tutorial” para genética de poblaciones humana y algo de epidemiología genética", " Human Whole Exome Analysis Hugo Naya1 Lucía Spangenberg2 2022-11-17 Notas y “tutorial” para genética de poblaciones humana y algo de epidemiología genética Las presentes notas son una breve y mínima introducción a algunas posibilidades que se nos presentan con datos genómicos para hacer genética de poblaciones humanas y epidemiología genética. Hay, en algunos casos, una breve introducción teórica del tema a trabajar y en esos casos la misma es parte del libro “Introducción a la Genética de Poblaciones y a la Genética Cuantitativa” (disponible en https://blakngu.github.io/libro/), pero en general el foco fue puesto en trabajar sobre los datos utilizando el programa R (https://cran.r-project.org). Como no se asume una familiaridad importante con el mismo, varios ejercicios se centran en analizar los datos utilizando funciones básicas en lugar de utilizar paquetes específicos, lo que sin embargo se muestra más adelante. Genética Cuantitativa Evolutiva, Facultad de Agronomía, hnaya@fagro.edu.uy &amp; Unidad de Bioinformática, Institut Pasteur de Montevideo, naya@pasteur.edu.uy↩︎ Hospital de Clínicas/Facultad de Medicina &amp; Unidad de Bioinformática, Institut Pasteur de Montevideo, lucia@pasteur.edu.uy↩︎ "],["genética-de-poblaciones.html", "Capítulo 1 Genética de Poblaciones 1.1 Lectura de un archivo VCF con genotipos de diversos individuos 1.2 El equilibrio de Hardy-Weinberg (breve introducción teórica) 1.3 Equilibrio de Hardy-Weinberg (PRÁCTICO) 1.4 Pasaje de los genotipos a forma numérica 1.5 Muestras y poblaciones en nuestros datos 1.6 Análisis de Componentes Principales 1.7 Paquetes específicos para genética de poblaciones (adegenet y hierfstat) 1.8 El Coeficiente de endocría y estadísticos F (introducción teórica) 1.9 Anális de PCA usando paquetes de genética de poblaciones 1.10 OTRA FORMA DE HACER PCA 1.11 ENSEMBL y biomaRt 1.12 H-W: la frecuencia de heterocigotas en función de la frecuencia alélica (intro teórica) 1.13 Heterocigosidad", " Capítulo 1 Genética de Poblaciones 1.1 Lectura de un archivo VCF con genotipos de diversos individuos En general, un tipo de formato de archivos ampliamente utilizado en genómica es el VCF que resumen la información de variantes en un solo archivo. Este formato permite la posibilidad de informar in-extenso sobre un solo genoma/exoma o de incluir menos información pero para un número muy grande de genomas. Al no tratarse de un formato totalmente tabular ni totalmente “taggueado” (markup language), es conveniente utilizar alguna función específica para leer este tipo de archivos. Para eso, vamos a cargar un par de paquetes que poseen esas capacidades y en principio vamos a trabajar con las funciones del paquete “vcfR”. ¡Importante! La función setwd() sirve para cambiar el directorio de trabajo en R y debés utilizar el camino correcto en tu máquina que lleve a los datos (en caso de dudas puedes consultar a los docentes del curso). Luego de cargar los paquetes y de cambiar de directorio al directorio de trabajo, finalmente usando la función read.vcfR() vamos a leer el archivo con formato VCF y cargar los datos en un objeto llamado “vcf”. Si deseas ver la evolución a medida de que se va leyendo el archivo (nosotros lo deshabilitamos para no generar una salida molesta en este tutorial), alcanza con cambiar a verbose=TRUE en la función read.vcfR(). set.seed(9876543) library(&quot;vcfR&quot;) library(&quot;PopGenome&quot;) setwd(&quot;~/cursos/cursoHumanWholeExomeAnalysis2022/data/&quot;) vcf &lt;- read.vcfR(&quot;native_charrua_samtools_thin20.vcf&quot;, verbose = FALSE) class(vcf) ## [1] &quot;vcfR&quot; ## attr(,&quot;package&quot;) ## [1] &quot;vcfR&quot; Ahora, en el objeto “vcf” perteneciente a la clase “vcfR” tenemos almacenada toda la información de nuestro archivo (formato VCF). Para estudiar un poco el contenido de este archivo podemos en un principio ver los nombres de los “slots” del mismo y luego explorar estos con mucha cautela. ¡Importante! La cantidad de datos almacenada en estos objetos puede ser enorme y por lo tanto cualquier llamado a la visualización (mostrar en pantalla) el contenido completo puede ser catastrófico para la sesión de R. Para explorar con cautela los datos, muchas veces es útil utilizar la función head(), pero en nuestro caso también esa función puede darnos problemas con tablas masivas, de muchas columnas, en cuyo caso es mucho mejor subsetear dichas tablas. names(attributes(vcf)) ## [1] &quot;meta&quot; &quot;fix&quot; &quot;gt&quot; &quot;class&quot; class(vcf@meta) ## [1] &quot;character&quot; length(vcf@meta) ## [1] 27 head(vcf@meta) ## [1] &quot;##fileformat=VCFv4.2&quot; &quot;##fileDate=20221109&quot; ## [3] &quot;##source=PLINKv1.90&quot; &quot;##contig=&lt;ID=1,length=249210708&gt;&quot; ## [5] &quot;##contig=&lt;ID=2,length=242919946&gt;&quot; &quot;##contig=&lt;ID=3,length=197794285&gt;&quot; class(vcf@fix) ## [1] &quot;matrix&quot; &quot;array&quot; dim(vcf@fix) ## [1] 72820 8 head(vcf@fix) ## CHROM POS ID REF ALT QUAL FILTER INFO ## [1,] &quot;1&quot; &quot;1087683&quot; &quot;rs9442380&quot; &quot;2&quot; &quot;4&quot; NA NA &quot;PR&quot; ## [2,] &quot;1&quot; &quot;1156131&quot; &quot;rs2887286&quot; &quot;2&quot; &quot;4&quot; NA NA &quot;PR&quot; ## [3,] &quot;1&quot; &quot;1892325&quot; &quot;rs2803291&quot; &quot;2&quot; &quot;4&quot; NA NA &quot;PR&quot; ## [4,] &quot;1&quot; &quot;2033256&quot; &quot;rs908742&quot; &quot;3&quot; &quot;1&quot; NA NA &quot;PR&quot; ## [5,] &quot;1&quot; &quot;2089526&quot; &quot;rs262654&quot; &quot;3&quot; &quot;1&quot; NA NA &quot;PR&quot; ## [6,] &quot;1&quot; &quot;2173504&quot; &quot;rs263526&quot; &quot;4&quot; &quot;2&quot; NA NA &quot;PR&quot; class(vcf@gt) ## [1] &quot;matrix&quot; &quot;array&quot; dim(vcf@gt) ## [1] 72820 2362 (vcf@gt)[1:10,1:10] ## FORMAT 1_C1 2_C2 3_C3 4_C4 5_C5 6_C6 7_C7 8_C8 9_C9 ## [1,] &quot;GT&quot; &quot;0/0&quot; &quot;0/1&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/1&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/1&quot; &quot;0/0&quot; ## [2,] &quot;GT&quot; &quot;1/1&quot; &quot;0/0&quot; &quot;1/1&quot; &quot;1/1&quot; &quot;1/1&quot; &quot;0/1&quot; &quot;1/1&quot; &quot;0/1&quot; &quot;0/1&quot; ## [3,] &quot;GT&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;1/1&quot; &quot;0/1&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/1&quot; &quot;1/1&quot; ## [4,] &quot;GT&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/1&quot; &quot;0/1&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/1&quot; ## [5,] &quot;GT&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/1&quot; &quot;0/1&quot; &quot;0/1&quot; &quot;0/1&quot; &quot;0/0&quot; &quot;0/1&quot; ## [6,] &quot;GT&quot; &quot;0/0&quot; &quot;0/1&quot; &quot;0/1&quot; &quot;0/1&quot; &quot;0/1&quot; &quot;0/1&quot; &quot;0/1&quot; &quot;0/1&quot; &quot;0/0&quot; ## [7,] &quot;GT&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; ## [8,] &quot;GT&quot; &quot;0/1&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/1&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; ## [9,] &quot;GT&quot; &quot;0/0&quot; &quot;0/1&quot; &quot;0/0&quot; &quot;1/1&quot; &quot;0/1&quot; &quot;1/1&quot; &quot;1/1&quot; &quot;0/0&quot; &quot;1/1&quot; ## [10,] &quot;GT&quot; &quot;0/1&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; &quot;0/0&quot; ¿Qué representan las filas y las columnas de la tabla “gt”? En general también, no es necesario trabajar con todos los cromosomas a la vez (ya que el número de marcadores e individuos suele complicar el acceso a la memoria) y existe la posibilidad en este paquete de separar los distintos cromosomas y luego poder trabajar con ellos. La siguiente es la forma de hacerlo, pero como nosotros no la vamos a usar (en cambio, cuando sea necesario vamos a elegir un juego reducido y aleatorio de marcadores), si tu máquina no posee suficiente memoria no es necesario que ejecutes el siguiente “chunk”: if (FALSE) { ### CROMOSOMAS PRESENTES myChroms &lt;- unique(getCHROM(vcf)) liChrVCF&lt;-lapply(myChroms,function(x) vcf[getCHROM(vcf)==x, ]) names(liChrVCF)&lt;-myChroms lichr&lt;-lapply(liChrVCF,create.chromR,name=&quot;CHROM&quot;) } Volvamos al conjunto de todos nuestros datos, que teníamos almacenados en un objeto de clase “vcfR”. Solamente por comodidad futura, vamos a cargar el contenido de los distintos “slots” en diferentes objetos de tipo básico (data.frame, por ejemplo). # Tabla de los SNPS: verificamos que no hay cromosomas sexuales ni MT snps&lt;-as.data.frame(vcf@fix) Veamos ahora si podemos caracterizar un poco mejor nuestros datos. ¿Cuántos y cuáles cromosomas están presentes en nuestros datos? table(snps$CHROM) ## ## 1 10 11 12 13 14 15 16 17 18 19 2 20 21 22 3 ## 5793 3964 3649 3531 2745 2477 2281 2183 1968 2205 1212 6066 1977 1093 1075 5108 ## 4 5 6 7 8 9 ## 4288 4610 5005 4052 4043 3495 table(snps$REF) ## ## 1 2 3 4 ## 17133 19150 18999 17538 table(snps$ALT) ## ## 1 2 3 4 ## 18973 17538 17133 19176 ¿Se distribuyen al azar los alelos en los cromosomas? ¿Cuál sería una forma de definir esto en términos estadísticos? chisq.test(table(snps$CHROM,snps$REF)) ## ## Pearson&#39;s Chi-squared test ## ## data: table(snps$CHROM, snps$REF) ## X-squared = 99.657, df = 63, p-value = 0.00223 chisq.test(table(snps$CHROM,snps$ALT)) ## ## Pearson&#39;s Chi-squared test ## ## data: table(snps$CHROM, snps$ALT) ## X-squared = 97.864, df = 63, p-value = 0.003218 ¿Cómo están codificados los alelos (bases) en la tabla de SNPs? Una forma de resolver esto sería elegir un par de SNPs con diferentes alelos referencia y alternativo y luego ver en las bases de datos (puedes usasr la web) las bases involucradas. ¿Existe un “mapeo” aparente entre la codificación numérica utilizada y las 4 bases? Veamos ahora nuestra tabla de genotipos y si podemos hacer una tabla con la frecuencia absoluta y relativa de los distintos genotipos por marcador. Para ello vamos a usar la función table() que ya usamos previamente y que nos realiza una tabla de conteo de los datos. Un punto importante a verificar previamente, que no lo vamos a hacer en este caso, es que se trate de marcadores bi-alélicos, ya que de lo contrario aparecerían más de 3 genotipos posibles. En nuestro caso, todos los marcadores son bi-alélicos y por lo tanto los tres genotipos posibles se codifican “0/0” (homocigoto de referencia), “0/1” heterocigoto y “1/1” (homocigoto alternativo). genot&lt;-as.data.frame(vcf@gt) genot&lt;-genot[,-1] rownames(genot)&lt;-snps$ID mita&lt;-t(apply(genot,1,function(x) table(x)[c(&quot;0/0&quot;,&quot;0/1&quot;,&quot;1/1&quot;)])) colnames(mita)&lt;-paste(&quot;geno&quot;,c(&quot;0/0&quot;,&quot;0/1&quot;,&quot;1/1&quot;),sep=&quot;&quot;) mita[is.na(mita)]&lt;-0 mita.rel&lt;-mita/apply(mita,1,sum) Veamos el contenido de estas dos tablas que generamos. head(mita) ## geno0/0 geno0/1 geno1/1 ## rs9442380 1634 601 125 ## rs2887286 925 841 588 ## rs2803291 1662 600 97 ## rs908742 875 990 487 ## rs262654 1407 717 230 ## rs263526 1144 896 317 head(mita.rel) ## geno0/0 geno0/1 geno1/1 ## rs9442380 0.6923729 0.2546610 0.05296610 ## rs2887286 0.3929482 0.3572642 0.24978760 ## rs2803291 0.7045358 0.2543451 0.04111912 ## rs908742 0.3720238 0.4209184 0.20705782 ## rs262654 0.5977060 0.3045879 0.09770603 ## rs263526 0.4853627 0.3801443 0.13449300 ¿Se encuentran los distintos marcadores en equilibrio de Hardy-Weinberg? En particular, el archivo con el que estamos trabajando se trata de un subconjunto de marcadores (SNPs) en diferentes individuos, los que pertenecen a su vez a diferentes poblaciones. Se trata de un sub-conjunto de los marcadores ya que el total de los marcadores con información en muchísimo mayor y dificulta el trabajarlo a nivel de un práctico con máquinas de escasa memoria y capacidad de procesador. Más aún, si bien elegimos trabajar desde R para poder explorar mejor todos los pasos, existen otras alternativas de “software” que permiten cálculos más eficientes cuando los volúmenes de datos son masivos. Algunos de ellos, como plink, permiten trabajar desde R con facilidad (https://www.cog-genomics.org/plink/1.9/rserve). 1.2 El equilibrio de Hardy-Weinberg (breve introducción teórica) La “ley de Hardy-Weinberg”, a veces conocida también como de Hardy-Weinberg-Castle por los trabajos de Castle (1903), Hardy (1908) y Weinberg (1908),3 es posiblemente uno de los resultados mejor conocidos de la genética de poblaciones. La misma permite predecir la composición de genotipos en un locus determinado, una vez alcanzado el equilibrio, a partir de la frecuencia de los alelos, cuando se cumplen una serie de condiciones, básicamente el apareamiento aleatorio entre los individuos de la población. La base de la misma es conceptualmente sencilla: en un individuo diploide, la probabilidad de observar un genotipo en particular en un locus autosómico determinado (es decir, no se encuentra en los cromosomas “sexuales”) es el producto de la frecuencia de los gametos que lo formaron. Pongamos un ejemplo sencillo para mostrarlo; supongamos un locus autosómico con dos alelos, \\(A_1\\) y \\(A_2\\), con frecuencias \\(p\\) y \\(q\\) (siendo \\(q=1-p\\) donde la suma de las frecuencias de los dos alelos debe ser 1 ya que asumimos que este locus solo tiene 2 alelos). Más aún, supongamos que se trata de una especie diploide hermafrodita, es decir, todos los individuos producen gametos masculinos y femeninos y para simplificar aún más asumamos que estos gametos se colocan en dos “pools”, uno de gametos masculinos y otro de gametos femeninos, todos los individuos produciendo exactamente la misma cantidad de gametos (para simplificar el efecto del tamaño poblacional asumimos también que dos gametos provenientes del mismo individuo, uno masculino y otro femenino se pueden combinar). Finalmente, aseguremos que los apareamientos sean completamente al azar, una condición que se conoce como panmixia. Para “crear” los individuos de la nueva generación extraemos un gameto de cada “pool”. Por lo tanto, la probabilidad de cada genotipo estará dada por la probabilidad de extraer esa combinación, que al tratarse de eventos independientes (el gameto masculino del femenino) es el producto de ambas probabilidades. Es decir: \\[\\begin{equation} \\begin{split} P(A_1A_1)=P(A_1)\\cdot P(A_1)=p\\cdot p=p^2\\\\ P(A_1A_2)=2\\cdot P(A_1)\\cdot P(A_2)=2\\cdot p\\cdot q=2pq\\\\ P(A_2A_2)=P(A_2)\\cdot P(A_2)=q\\cdot q=q^2\\\\ \\end{split} \\tag{1.1} \\end{equation}\\] que es la expresión más sencilla de la ley de Hardy-Weinberg. Es de notar que el factor 2 que aparece multiplicando la frecuencia de los genotipos heterocigotos (\\(A_1A_2\\)) se debe a que existen dos formas de obtener estos individuos: a) sacando un alelo \\(A_1\\) del “pool” masculino y un \\(A_2\\) del “pool” femenino y b) sacando un alelo \\(A_2\\) del “pool” masculino y un \\(A_1\\) del “pool” femenino, ambas con la misma probabilidad (\\(pq\\)). Lo primero que debemos verificar es que estas frecuencias sumen a 1, ya que no existen otros genotipos posibles (recordemos que \\(q=1-p\\)): \\[\\begin{equation} p^2+2pq+q^2=p^2+2p(1-p)+(1-p)^2=p^2+2p-2p^2+1-2p+p^2=\\\\ =(2p^2-2p^2)+(2p-2p)+1=0+0+1=1 \\end{equation}\\] Una vez verificado esto, el siguiente paso será determinar las nuevas frecuencias de los alelos \\(A_1\\) y \\(A_2\\), llamémosles \\(p&#39;\\) y \\(q&#39;\\). Lo podemos hacer sumando los aportes de alelos de cada genotipo (los heterocigotos aportan la mitad de su frecuencia para cada tipo de alelo, \\(A_1\\) y \\(A_2\\), mientras que los homocigotos aportan toda su frecuencia del respectivo alelo): \\[\\begin{equation} p&#39;=p^2+\\frac{1}{2} 2pq=p^2+pq=p(p+q)=p(1)=p\\\\ q&#39;=q^2+\\frac{1}{2} 2pq=q^2+pq=q(q+p)=q(1)=q \\end{equation}\\] Por lo tanto, después de una generación bajo este apareamiento al azar en nuestra especie hermafrodita, las frecuencias alélicas permanecen inalteradas, \\(p=p&#39;\\) y \\(q=q&#39;\\). Obviamente ocurrirá lo mismo para las siguientes generaciones, tanto a nivel de la frecuencia de los genotipos como de los alelos (las frecuencias de los genotipos solo dependen de las frecuencias de los alelos, como vimos en la ecuaciones (1.1) y siguientes), por lo que luego de una generación hemos alcanzado el equilibrio: esta condición se conoce como equilibrio de Hardy-Weinberg. ## ## Attaching package: &#39;grid&#39; ## The following object is masked from &#39;package:ff&#39;: ## ## pattern Figura 1.1: Cuadrado de Punnett con frecuencias \\(p=0,6\\) y \\(q=0,4\\). Las áreas de los rectángulos/cuadrados representan las frecuencias de los genotipos. Figura tomada de Wikipedia (CC0), modificada a partir de Rosenberg and Kang (2015) Una forma gráfica de ver estos resultados son los llamados “cuadrados de Punnett”4, como el que se aprecia en la figura 1.1. En la misma, en el eje horizontal tenemos la frecuencia con la que aparecen los gametos masculinos, mientras que en el vertical aparecen las frecuencias de los gametos femeninos; por lo tanto, el producto de estas frecuencias será el área de los rectángulos y cuadrados correspondientes (de geometría elemental, el área de cuadrados y rectángulos es el producto de dos lados contiguos). Se observa además claramente el origen del factor 2 en los heterocigotos (la suma de las 2 áreas coloreadas en rojo, cada una con valor \\(pq\\)). Si tenemos un locus con \\(n\\) alelos: ¿Cuántos genotipos posibles tenemos? ¿Cuáles son las frecuencias esperadas para los distintos genotipos? Ayuda: comenzar con \\(n=3\\) en un cuadrado de Punnett y luego pasar a la generalización. Supuestos que asumimos se cumplen para H-W Todos los genotipos poseen el mismo “fitness” (es decir, ningún genotipo posee una ventaja respecto al número de descendientes que deja) La población debe estar formada por un número infinitamente grande de individuos El apareamiento al azar debe producirse en toda la población No debe existir migración que altere las frecuencias Debe existir un equilibrio mutacional (es decir, las frecuencias de los alelos no varían pese a existir mutaciones). 1.3 Equilibrio de Hardy-Weinberg (PRÁCTICO) En general, el apartamiento (en términos estadísticos) del equilibrio de Hardy-Weinberg representa el apartamiento de alguna de las condiciones que asumimos, por ejemplo la panmixia, o la ausencia de selección diferencial para los genotipos involucrados (así sea directamente o por desequilibrio de ligamiento), etc. En este sentido, es una práctica usual (aunque discutida) en predicción genómica el depurar el juego de marcadores utilizado, eliminando aquellos que se apartan significativamente de lo esperado para el equilibrio Hardy-Weinberg. Veamos si en nuestros datos los marcadores se encuentran en equilibrio de Hardy-Weinberg. Para eso, lo primero que vamos a hacer es crear una función que dadas las frecuencias absolutas de los 3 genotipos de cada marcador (en forma ordenada, “0/0”, “0/1” y “1/1”) me genera una tabla con las frecuencias esperadas y las observadas. eqHWtabla&lt;-function(x){xt&lt;-sum(x);p&lt;-(x[1]+x[2]/2)/xt;y&lt;-c(p^2*xt,2*p*(1-p)*xt,xt*(1-p)^2);ta&lt;-rbind(x,y);rownames(ta)&lt;-c(&quot;Ho&quot;,&quot;He&quot;);ta} La lógica de esta función es sencilla: calcular la frecuencia \\(p\\) de un alelo (el otro queda determinado como \\(q=1-p\\)) y a partir de esto calcular las frecuencias absolutas esperadas como \\(xt\\times p^2\\), \\(xt \\times 2p(1-p)\\) y \\(xt \\times (1-p)^2\\), donde \\(xt\\) es la suma de las frecuencias de los genotipos. Finalmente, devuelve una tabla donde la primera fila se corresponde con las frecuencias absolutas observadas y la segunda con las frecuencias absolutas esperadas. Veamos que ocurre si le aplicamos esta función a uno de los marcadores (por ejemplo, al primero) cuyas frecuencias genotípicas calculamos previamente. mita[1,] ## geno0/0 geno0/1 geno1/1 ## 1634 601 125 eqHWtabla(mita[1,]) ## geno0/0 geno0/1 geno1/1 ## Ho 1634.000 601.0000 125.00000 ## He 1585.716 697.5676 76.71621 Si quisiéramos ahora conocer si las frecuencias observadas coinciden con las esperadas para el equilibrio de Hardy-Weinberg podríamos realizar un test sobre esta tabla, por el ejemplo el de \\(\\chi^2\\), y observar el “p-value” correspondiente chisq.test(eqHWtabla(mita[1,])) ## ## Pearson&#39;s Chi-squared test ## ## data: eqHWtabla(mita[1, ]) ## X-squared = 19.463, df = 2, p-value = 5.939e-05 Podemos ahora aplicar la función a todos los marcadores y obtener un vector con los p-valores correspondientes a cada marcador HWmarcadores&lt;-apply(mita,1,function(x) chisq.test(eqHWtabla(x))$p.value) En este caso, utilizamos la función apply() sobre la tabla completa de genotipos de los marcadores. Esta función toma la tabla como primer argumento, el segundo especifica si quiero trabajar sobre filas (1) o sobre columnas (2) y el tercer argumento especifica la función que quiero aplicar. Como en nuestro caso queremos aplicar la composición de dos funciones, es decir aplicarle la función chisq.test() al resultados de la función eqHWtabla(), entonces especificamos que para cada fila x vamos a calcular chisq.test(eqHWtabla(x)) y de eso quedarnos con el resultado almacenado en el ‘slot’ p.value. Veamos la distribución de los valores p para el conjunto de marcadores. Una manera sencilla es realizar un histograma, lo que conseguimos con hist(HWmarcadores,100,main=&quot;HW en marcadores&quot;,xlab=&quot;p-values&quot;,ylab=&quot;Frecuencia&quot;) Normalmente, cuando la distribución de los genotipos observada en los distintos marcadores sigue aproximadamente las frecuencias esperadas para el equilibrio de Hardy-Weinberg, la distribución de los p-valores se asemeja a una distribución uniforme. En nuestro caso, esto es claramente diferente a lo que observamos, donde tenemos un número enorme de marcadores que aparecen como significativos en primera instancia. Podemos ver la proporción de los mismos que aparece como por debajo del umbral \\(0.01\\) haciendo sum(HWmarcadores&lt;1e-2)/length(HWmarcadores) ## [1] 0.5193491 Obviamente, como tenemos miles de marcadores, si fijamos un umbral para determinar la significancia de los p-valores obtenidos, la probabilidad de observar por azarvalores inferiores al umbral se incrementa en forma sustancial y debemos corregir los mismos por el efecto de ensayos múltiples (“multiple testing”). Una alternativa sencilla es usar la función p.adjust(), eligiendo el método de corrección que sea de nuestro interés. Una corrección muy drástica suele ser el método de “Bonferroni” que consiste en ajustar el valor del umbral dividiéndolo entre el número de ensayos de hipótesis, o lo que es similar, multiplicando cada p-valor por el número de marcadores. En nuestro caso, podemos hacer pval.bonferroni&lt;-p.adjust(HWmarcadores, method =&quot;bonferroni&quot;) sum(pval.bonferroni&lt;1e-2)/length(pval.bonferroni) ## [1] 0.1483796 Claramente, la frecuencia de marcadores significativos bajó, pero aún así la proporción es enorme, lo que denota que en general nuestro juego de marcadores no está en equilibrio de Hardy-Weinberg. ¿Cuál podría ser la razón? 1.4 Pasaje de los genotipos a forma numérica El formato en el que están descritos los genotipos en el archivo VCF (“0/0”, “0/1” y “1/1”) dificulta su trabajo en forma numérica. En el caso de que trabajemos con marcadores bi-estado (o bi-alélicos), es decir que solo existen dos alelos posibles para cada marcador, resulta intuitivo considerar el número de copias de unos de los dos posibles, por ejemplo el alternativo (ALT), como una variable numérica, discreta con solo 3 valores posibles: 0 para los genotipos “0/0” 1 para los genotipos “0/1” 2 para los genotipos “1/1” Más adelante veremos como esto nos simplifica la vida, pero por ahora nos vamos a limitar a hacer dicha transformación para nuestra matriz de genotipos: ngeno&lt;-genot ngeno[ngeno==&quot;0/0&quot;]&lt;-0 ngeno[ngeno==&quot;0/1&quot;]&lt;-1 ngeno[ngeno==&quot;1/1&quot;]&lt;-2 ngenot&lt;-apply(ngeno,2,as.numeric) rownames(ngenot)&lt;-rownames(genot) genot[1:10,1:12] ## 1_C1 2_C2 3_C3 4_C4 5_C5 6_C6 7_C7 8_C8 9_C9 10_C10 11_HGDP00479 ## rs9442380 0/0 0/1 0/0 0/0 0/1 0/0 0/0 0/1 0/0 0/1 0/0 ## rs2887286 1/1 0/0 1/1 1/1 1/1 0/1 1/1 0/1 0/1 0/1 1/1 ## rs2803291 0/0 0/0 1/1 0/1 0/0 0/0 0/0 0/1 1/1 0/1 0/0 ## rs908742 0/0 0/0 0/0 0/1 0/1 0/0 0/0 0/0 0/1 0/1 0/0 ## rs262654 0/0 0/0 0/0 0/1 0/1 0/1 0/1 0/0 0/1 0/1 0/0 ## rs263526 0/0 0/1 0/1 0/1 0/1 0/1 0/1 0/1 0/0 0/1 0/1 ## rs10797417 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 ## rs11588312 0/1 0/0 0/0 0/0 0/1 0/0 0/0 0/0 0/0 0/0 0/1 ## rs2017143 0/0 0/1 0/0 1/1 0/1 1/1 1/1 0/0 1/1 1/1 0/1 ## rs903919 0/1 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 ## 12_HGDP00985 ## rs9442380 0/0 ## rs2887286 0/0 ## rs2803291 0/0 ## rs908742 0/0 ## rs262654 0/0 ## rs263526 0/0 ## rs10797417 0/1 ## rs11588312 0/0 ## rs2017143 0/1 ## rs903919 0/0 ngenot[1:10,1:12] ## 1_C1 2_C2 3_C3 4_C4 5_C5 6_C6 7_C7 8_C8 9_C9 10_C10 11_HGDP00479 ## rs9442380 0 1 0 0 1 0 0 1 0 1 0 ## rs2887286 2 0 2 2 2 1 2 1 1 1 2 ## rs2803291 0 0 2 1 0 0 0 1 2 1 0 ## rs908742 0 0 0 1 1 0 0 0 1 1 0 ## rs262654 0 0 0 1 1 1 1 0 1 1 0 ## rs263526 0 1 1 1 1 1 1 1 0 1 1 ## rs10797417 0 0 0 0 0 0 0 0 0 0 0 ## rs11588312 1 0 0 0 1 0 0 0 0 0 1 ## rs2017143 0 1 0 2 1 2 2 0 2 2 1 ## rs903919 1 0 0 0 0 0 0 0 0 0 0 ## 12_HGDP00985 ## rs9442380 0 ## rs2887286 0 ## rs2803291 0 ## rs908742 0 ## rs262654 0 ## rs263526 0 ## rs10797417 1 ## rs11588312 0 ## rs2017143 1 ## rs903919 0 1.5 Muestras y poblaciones en nuestros datos Investiguemos un poco más. Para ello vamos a cargar la tabla que contiene la información de las poblaciones y proyectos a los que pertenecen las distintas muestras que se encuentran en IGSR: The International Genome Sample Resource (https://www.internationalgenome.org/data-portal/sample). No te olvides de cambair el “path” al adecuado en tu máquina. ta&lt;-read.delim(&quot;~/cursos/cursoHumanWholeExomeAnalysis2022/data/samples1000G.txt&quot;) dim(ta) ## [1] 4978 9 head(ta) ## Sample.name Sex Biosample.ID Population.code Population.name ## 1 HG00271 male SAME123417 FIN Finnish ## 2 HG00276 female SAME123424 FIN Finnish ## 3 HG00288 female SAME1839246 FIN Finnish ## 4 HG00290 male SAME1839057 FIN Finnish ## 5 HG00303 male SAME1840115 FIN Finnish ## 6 HG00308 male SAME124161 FIN Finnish ## Superpopulation.code Superpopulation.name Population.elastic.ID ## 1 EUR European Ancestry FIN ## 2 EUR European Ancestry FIN ## 3 EUR European Ancestry FIN ## 4 EUR European Ancestry FIN ## 5 EUR European Ancestry FIN ## 6 EUR European Ancestry FIN ## Data.collections ## 1 1000 Genomes on GRCh38,1000 Genomes 30x on GRCh38,1000 Genomes phase 3 release,1000 Genomes phase 1 release,Geuvadis ## 2 1000 Genomes on GRCh38,1000 Genomes 30x on GRCh38,1000 Genomes phase 3 release,1000 Genomes phase 1 release,Geuvadis ## 3 1000 Genomes on GRCh38,1000 Genomes 30x on GRCh38,1000 Genomes phase 3 release ## 4 1000 Genomes on GRCh38,1000 Genomes 30x on GRCh38,1000 Genomes phase 3 release ## 5 1000 Genomes on GRCh38 ## 6 1000 Genomes on GRCh38,1000 Genomes 30x on GRCh38,1000 Genomes phase 3 release,Geuvadis Claramente, si nos fijamos en los identificadores de nuestras muestras (es decir, de las muestras que tenemos en la tabla de genotipos), el identificador similar al usado por el IGSR sería la secuencia de caracteres que se encuentra luego del primer guión bajo (“_“), por lo que debemos retener esa parte del identificador y ver si lo encontramos en la tabla del IGSR: colnames(genot)[1:40] ## [1] &quot;1_C1&quot; &quot;2_C2&quot; &quot;3_C3&quot; &quot;4_C4&quot; &quot;5_C5&quot; ## [6] &quot;6_C6&quot; &quot;7_C7&quot; &quot;8_C8&quot; &quot;9_C9&quot; &quot;10_C10&quot; ## [11] &quot;11_HGDP00479&quot; &quot;12_HGDP00985&quot; &quot;13_HGDP01094&quot; &quot;14_HGDP00982&quot; &quot;15_HGDP00911&quot; ## [16] &quot;16_HGDP01202&quot; &quot;17_HGDP00927&quot; &quot;18_HGDP00461&quot; &quot;19_HGDP00986&quot; &quot;20_HGDP00449&quot; ## [21] &quot;21_HGDP00912&quot; &quot;22_HGDP01283&quot; &quot;23_HGDP00928&quot; &quot;24_HGDP00937&quot; &quot;25_HGDP01408&quot; ## [26] &quot;26_HGDP00991&quot; &quot;27_HGDP01031&quot; &quot;28_HGDP01263&quot; &quot;29_HGDP01275&quot; &quot;30_HGDP00611&quot; ## [31] &quot;31_HGDP00623&quot; &quot;32_HGDP00634&quot; &quot;33_HGDP00645&quot; &quot;34_HGDP00557&quot; &quot;35_HGDP00569&quot; ## [36] &quot;36_HGDP00581&quot; &quot;37_HGDP00594&quot; &quot;38_HGDP00675&quot; &quot;39_HGDP00687&quot; &quot;40_HGDP00697&quot; nombresengenot&lt;-unlist(lapply(colnames(genot),function(x)strsplit(x,&quot;_&quot;)[[1]][2])) head(nombresengenot,40) ## [1] &quot;C1&quot; &quot;C2&quot; &quot;C3&quot; &quot;C4&quot; &quot;C5&quot; &quot;C6&quot; ## [7] &quot;C7&quot; &quot;C8&quot; &quot;C9&quot; &quot;C10&quot; &quot;HGDP00479&quot; &quot;HGDP00985&quot; ## [13] &quot;HGDP01094&quot; &quot;HGDP00982&quot; &quot;HGDP00911&quot; &quot;HGDP01202&quot; &quot;HGDP00927&quot; &quot;HGDP00461&quot; ## [19] &quot;HGDP00986&quot; &quot;HGDP00449&quot; &quot;HGDP00912&quot; &quot;HGDP01283&quot; &quot;HGDP00928&quot; &quot;HGDP00937&quot; ## [25] &quot;HGDP01408&quot; &quot;HGDP00991&quot; &quot;HGDP01031&quot; &quot;HGDP01263&quot; &quot;HGDP01275&quot; &quot;HGDP00611&quot; ## [31] &quot;HGDP00623&quot; &quot;HGDP00634&quot; &quot;HGDP00645&quot; &quot;HGDP00557&quot; &quot;HGDP00569&quot; &quot;HGDP00581&quot; ## [37] &quot;HGDP00594&quot; &quot;HGDP00675&quot; &quot;HGDP00687&quot; &quot;HGDP00697&quot; sum(nombresengenot%in%ta$Sample.name) ## [1] 1591 muestras.que.estan&lt;-colnames(genot)[which(nombresengenot%in%ta$Sample.name)] Es decir, de todas nuestras muestras, en la tabla del IGSR pudimos identificar 1591 de nuestras muestras que se encuentran en dicha tabla. Vamos a subsetear nuestros datos para trabajar con las muestras que nos interesan, que en este caso son las que pudimos identificar su origen. De paso, vamos a ver como podemos utilizar el hecho de que nuestros marcadores son todo bi-alélicos para nuestro provecho. ngenot.estan&lt;-ngenot[,muestras.que.estan] colnames(ngenot.estan)&lt;-nombresengenot[which(nombresengenot%in%ta$Sample.name)] dim(ngenot) ## [1] 72820 2361 dim(ngenot.estan) ## [1] 72820 1591 Para facilitar las cosas vamos a reducir también nuestra tabla de muestras a solo aquellas muestras que tenemos identificadas: tb&lt;-ta[which(ta$Sample.name%in%nombresengenot),] rownames(tb)&lt;-tb$Sample.name tb&lt;-tb[nombresengenot[which(nombresengenot%in%ta$Sample.name)],] head(tb) ## Sample.name Sex Biosample.ID Population.code Population.name ## HGDP00479 HGDP00479 male Biaka ## HGDP00985 HGDP00985 male Biaka ## HGDP01094 HGDP01094 male Biaka ## HGDP00982 HGDP00982 male SAMEA3302833 Mbuti ## HGDP00911 HGDP00911 male Mandenka ## HGDP01202 HGDP01202 male Mandenka ## Superpopulation.code Superpopulation.name Population.elastic.ID ## HGDP00479 Africa (HGDP) BiakaHGDP ## HGDP00985 Africa (HGDP) BiakaHGDP ## HGDP01094 Africa (HGDP) BiakaHGDP ## HGDP00982 Africa (SGDP) MbutiSGDP ## HGDP00911 Africa (HGDP) MandenkaHGDP ## HGDP01202 Africa (HGDP) MandenkaHGDP ## Data.collections ## HGDP00479 Human Genome Diversity Project ## HGDP00985 Human Genome Diversity Project ## HGDP01094 Human Genome Diversity Project ## HGDP00982 Simons Genome Diversity Project ## HGDP00911 Human Genome Diversity Project ## HGDP01202 Human Genome Diversity Project Claramente, ahora podemos apreciar que nuestros genotipos se corresponden con individuos que provienen de diferentes poblaciones. Para ver la distribución de las muestras en las diferentes poblaciones podemos hacer: table(tb$Population.code) ## ## ASW CEU CHB GIH JPT LWK MXL TSI YRI ## 884 34 108 83 82 85 73 49 88 105 table(tb$Population.name) ## ## Adygei African Ancestry SW Balochi ## 17 34 21 ## Bantu Herero Bantu Kenya Bantu South Africa ## 2 9 4 ## Bantu Tswana Basque Bedouin ## 2 24 43 ## Bedouin B Bergamo Bergamo Italian ## 2 2 9 ## Biaka Bougainville Brahui ## 21 10 23 ## Burusho Cambodian Cambodian,Cambodian ## 24 9 1 ## CEPH Colombian Dai ## 108 5 9 ## Daur Druze French ## 9 42 27 ## Gujarati Han Han Chinese ## 82 33 83 ## Hazara Hezhen Japanese ## 15 8 112 ## Japanese,Japanese Ju|&#39;hoan North Ju|&#39;hoan North,San ## 1 2 1 ## Kalash Karitiana Lahu ## 22 11 8 ## Luhya Luhya,Luhya Makrani ## 72 1 20 ## Mandenka Maya Mayan,Maya ## 21 15 2 ## Mbuti Mbuti,Mbuti Mexican Ancestry ## 11 2 49 ## Miao Mongola Mongolian ## 10 2 5 ## Mozabite Mozabite,Mozabite Naxi ## 24 1 8 ## Northern Han Orcadian Oroqen ## 10 15 9 ## Palestinian Papuan Papuan Sepik ## 42 3 1 ## Papuan,Papuan Highlands Papuan,Papuan Sepik Pathan ## 6 6 21 ## Pathan,Pathan Piapoco Pima ## 1 2 12 ## Russian San Sardinian ## 25 2 27 ## She Sindhi Surui ## 10 22 8 ## Toscani Tu Tujia ## 88 10 10 ## Tuscan Uygur Xibo ## 8 10 9 ## Yakut Yi Yoruba ## 21 10 125 Se aprecia que 884 muestras no tienen código de población asignado. ¿A que poblaciones (“Population.name”) pertenecen dichas muestras? Una forma fácil de responder esta pregunta es hacer: table(tb[tb$Population.code==&quot;&quot;,&quot;Population.name&quot;]) ## ## Adygei Balochi Bantu Herero ## 17 21 2 ## Bantu Kenya Bantu South Africa Bantu Tswana ## 9 4 2 ## Basque Bedouin Bedouin B ## 24 43 2 ## Bergamo Bergamo Italian Biaka ## 2 9 21 ## Bougainville Brahui Burusho ## 10 23 24 ## Cambodian Cambodian,Cambodian Colombian ## 9 1 5 ## Dai Daur Druze ## 9 9 42 ## French Han Hazara ## 27 33 15 ## Hezhen Japanese Ju|&#39;hoan North ## 8 28 2 ## Ju|&#39;hoan North,San Kalash Karitiana ## 1 22 11 ## Lahu Makrani Mandenka ## 8 20 21 ## Maya Mayan,Maya Mbuti ## 15 2 11 ## Mbuti,Mbuti Miao Mongola ## 2 10 2 ## Mongolian Mozabite Mozabite,Mozabite ## 5 24 1 ## Naxi Northern Han Orcadian ## 8 10 15 ## Oroqen Palestinian Papuan ## 9 42 3 ## Papuan Sepik Papuan,Papuan Highlands Papuan,Papuan Sepik ## 1 6 6 ## Pathan Pathan,Pathan Piapoco ## 21 1 2 ## Pima Russian San ## 12 25 2 ## Sardinian She Sindhi ## 27 10 22 ## Surui Tu Tujia ## 8 10 10 ## Tuscan Uygur Xibo ## 8 10 9 ## Yakut Yi Yoruba ## 21 10 20 Más arriba describíamos el “problema” de la falta de equilibrio Hardy-Weinberg en los marcadores considerados, pero uno de los supuestos del equilibrio de Hardy-Weinberg es que los apareamientos sean al azar, es decir en condiciones de “panmixia”. Observando el origen de nuestras muestras resulta claro de que esto es claramente imposible de que se cumpla, ya que aún en las muestras identificadas en el IGSR tenemos 78 poblaciones diferentes y es totalmente improbable que los individuos de las mismas se apareen con la misma probabilidad con individuos de la misma población que con individuos de cualquier otra población. Antes de seguir con este problema vamos a hacer una pequeña disgresión, para ver cómo el formato numérico de los genotipos me permite hacer cálculos eficientes. Veamos el problema de calcular las frecuencias de los alelos (de referencia o el alternativo) con nuestros datos seleccionados. De acuerdo con nuestro esquema de codificación numérica, el cero corresponde a ninguna copia del alelo alternativo (o lo que es lo mismo, a dos copias del de referencia), el uno se corresponde a una copia del alelo alternativo (y la otra del de referencia) y el dos se corresponde a dos copias del alelo alternativo (y ninguna del de referencia). Si tenemos \\(N\\) individuos diploides (los humanos somos diploides, y en nuestro genotipado es la situación mayoriataria, exceptuando el genoma mitocondrial), entonces tendremos un total de \\(2N\\) alelos. Por lo tanto, para cada marcador, la frecuencia del alelo alternativo será igual a la suma de los genotipos numéricos de todos los individuos, dividido entre \\(2N\\). Para calcular estas frecuencias para todos los marcadores, podemos hacer: freqSNPS&lt;-apply(ngenot.estan,1,function(x)sum(x)/(2*length(x))) hist(freqSNPS,100,main=&quot;Histograma de frequencia del alelo ALT&quot;,xlab=&quot;frecuencia del ALT&quot;,ylab=&quot;Frecuencia&quot;) Sin embargo, la función para calcular las frecuencias como la escribimos más arriba tiene el problema de no poder resolver genotipos faltantes (NA). Una versión mejorada de la misma sería: freqSNPS&lt;-apply(ngenot.estan,1,function(x)sum(x,na.rm=TRUE)/(2*sum(!is.na(x)))) hist(freqSNPS,100,main=&quot;Histograma de frequencia del alelo ALT&quot;,xlab=&quot;frecuencia del ALT&quot;,ylab=&quot;Frecuencia&quot;) En el histograma anterior se aprecia claramente que las frecuencias van desde cero hasta 0.63, lo que nos da una idea muy clara de que REF y ALT no se refieren al alelo mayoritario o minoritario. Una forma obvia de analizar estos datos es estudiar la frecuencia del alelo menor, MAF. En nuestro caso, al existir solo dos alelos por locus, la suma de las frecuencias relativas debe ser igual a uno, por lo que si la frecuencia de ALT es mayor a \\(\\frac{1}{2}=0.5\\), entonces el alelo menor será el de REF y al revés, si es menor a \\(\\frac{1}{2}\\) entonces el alelo menor ser el ALT. En términos del EBI: “When working with genome scale data the term reference allele refers to the base that is found in the reference genome. Since the reference is just somebody’s genome, it is not always the major allele. In contrast, the alternative allele refers to any base, other than the reference, that is found at that locus.” Al tratarse de una convención algo arbitraria es de esperar en cierta forma una bimodalidad de los datos, que si miramos con atención se observa en el histograma anterior. Una forma de superar esto es calcular la frecuencia del alelo menor (o del mayor). Para calcular la frecuencia del alelo menor (MAF), podemos hacer simplemente: maf&lt;-freqSNPS maf[which(maf&gt;0.5)]&lt;-1-maf[which(maf&gt;0.5)] hist(maf,100,main=&quot;Histograma de frequencia del alelo menor&quot;,xlab=&quot;MAF&quot;,ylab=&quot;Frecuencia&quot;) Volvamos ahora al tema de las distintas poblaciones y veamos si afecta en algo las frecuencias de los alelos en las mismas. Para evitar frecuencias extremas derivadas del bajo número de individuos (por ejemplo, con dos individuos las frecuencias posibles del MAF son \\(0\\), \\(1/4=0.25\\) y \\(1/2=0.5\\)), vamos a trabajar solo con las poblaciones que tienen más de 20 individuos en nuestra base: table(tb$Population.name)[table(tb$Population.name)&gt;20] ## ## African Ancestry SW Balochi Basque Bedouin ## 34 21 24 43 ## Biaka Brahui Burusho CEPH ## 21 23 24 108 ## Druze French Gujarati Han ## 42 27 82 33 ## Han Chinese Japanese Kalash Luhya ## 83 112 22 72 ## Mandenka Mexican Ancestry Mozabite Palestinian ## 21 49 24 42 ## Pathan Russian Sardinian Sindhi ## 21 25 27 22 ## Toscani Yakut Yoruba ## 88 21 125 popmas20&lt;-names(table(tb$Population.name)[table(tb$Population.name)&gt;20]) popmas20 ## [1] &quot;African Ancestry SW&quot; &quot;Balochi&quot; &quot;Basque&quot; ## [4] &quot;Bedouin&quot; &quot;Biaka&quot; &quot;Brahui&quot; ## [7] &quot;Burusho&quot; &quot;CEPH&quot; &quot;Druze&quot; ## [10] &quot;French&quot; &quot;Gujarati&quot; &quot;Han&quot; ## [13] &quot;Han Chinese&quot; &quot;Japanese&quot; &quot;Kalash&quot; ## [16] &quot;Luhya&quot; &quot;Mandenka&quot; &quot;Mexican Ancestry&quot; ## [19] &quot;Mozabite&quot; &quot;Palestinian&quot; &quot;Pathan&quot; ## [22] &quot;Russian&quot; &quot;Sardinian&quot; &quot;Sindhi&quot; ## [25] &quot;Toscani&quot; &quot;Yakut&quot; &quot;Yoruba&quot; Calculemos ahora para todas ellas las frecuencias del alelo menor para todas las poblaciones. fMAF&lt;-matrix(0,nrow=length(maf),ncol=length(popmas20)) dim(fMAF) ## [1] 72820 27 fFreq&lt;-matrix(0,nrow=length(maf),ncol=length(popmas20)) for (i in 1:length(popmas20)){muestras&lt;-tb[tb$Population.name==popmas20[i],&quot;Sample.name&quot;];fSNPS&lt;-apply(ngenot.estan[,muestras],1,function(x)sum(x,na.rm=TRUE)/(2*sum(!is.na(x))));fFreq[,i]&lt;-fSNPS;mafs&lt;-fSNPS;mafs[which(mafs&gt;0.5)]&lt;-1-mafs[which(mafs&gt;0.5)];fMAF[,i]&lt;-mafs} colnames(fFreq)&lt;-colnames(fMAF)&lt;-popmas20 Una verificación obvia de que el promedio ponderado de las frecuencias en las poblaciones es igual a la frecuencia promedio sobre todos los datos usados se puede calcular así: # PESOS PONDERADOS DE LAS POBLACIONES pesos&lt;-as.numeric(table(tb$Population.name)[table(tb$Population.name)&gt;20]) ffp&lt;-(fFreq%*%pesos)/sum(pesos) hist(ffp,100) # FRECUENCIA SOBRE TODOS LOS DATOS CONSIDERADOS freqSNPSpopmas20&lt;-apply(ngenot.estan[,tb[tb$Population.name%in%popmas20,&quot;Sample.name&quot;]],1,function(x)sum(x,na.rm=TRUE)/(2*sum(!is.na(x)))) plot(freqSNPSpopmas20,ffp,cex=0.2,xlab=&quot;media para todas las muestras consideradas&quot;,ylab=&quot;promedio ponderado&quot;) Notar que para evitar usar un bucle “for” que lleva muchísimo tiempo, para la verificación usamos el producto matricial, mediante el operador “%*%“, lo que acelera muchísimo los resultados. Verificado esto (ver la línea de regresión perfecta sobre la diagonal), podemos estudiar un poco la variabilidad de las frecuencias en las distinats poblaciones respecto a la frecuencia media en los datos. Por ejemplo, la población con más individuos en nuestra muestra es la Yoruba con 125 individuos. Veamos la variación de la frecuencia del alternativo en esta población respecto a dicha frecuencia en el promedio. popNmax&lt;-names(sort(table(tb$Population.name)[table(tb$Population.name)&gt;20],TRUE)[1]) plot(freqSNPSpopmas20,fFreq[,popNmax],cex=0.2,col=&quot;darkblue&quot;) Veamos ahora lo que ocurre para una de las poblaciones con número mínimo de genomas en nuestros datos: popNmin&lt;-names(sort(table(tb$Population.name)[table(tb$Population.name)&gt;20],FALSE)[1]) popNmin ## [1] &quot;Balochi&quot; plot(freqSNPSpopmas20,fFreq[,popNmin],cex=0.2,col=&quot;darkred&quot;) Claramente, en ambos casos se observa una enorme dispersión de los datos respecto al promedio, lo que nos indica claramente que las frecuencias promedio calculadas sobre poblaciones muy distintas, usándolas en conjunto, son un muy mal estimador de lo que podemos esperar del resto de los parámetros genéticos de interés. En la medida de que las poblaciones consideradas son más cercanas, desde el punto de vista genético, las frecuencias de los distintos alelos se distribuyen de una forma ajusta sobre la recta de regresión entre ellas. Por ejemplo, para las poblaciones de franceses y toscanos, podemos observar lo siguiente: plot(fFreq[,&quot;French&quot;],fFreq[,&quot;Toscani&quot;],cex=0.2,col=&quot;darkgreen&quot;,xlab=&quot;French&quot;,ylab=&quot;Toscani&quot;,main=&quot;Frecuencias alelos ALT&quot;) De hecho, si utilizamos la matriz de frecuencias de los alelos alternativos para las distintas poblaciones, podemos tener una primera aproximación a la relación genética entre poblaciones haciendo un “dendrograma” de cómo se agrupan de acuerdo a las distancias entre frecuencias alélicas. midist&lt;-dist(t(fFreq)) miclus&lt;-hclust(midist) plot(miclus,sub=&quot;&quot;,xlab=&quot;distancia entre frecuencias&quot;,main=&quot;Poblaciones&quot;,cex=0.75) Podemos utilizar este agrupamiento anterior para ver que ocurre entre dos poblaciones que aparecen como muy cercanas, como la CEPH (centro-europeos) y la toscana, plot(fFreq[,&quot;CEPH&quot;],fFreq[,&quot;Toscani&quot;],cex=0.2,col=&quot;green4&quot;,xlab=&quot;CEPH&quot;,ylab=&quot;Toscani&quot;,main=&quot;Frecuencias alelos ALT&quot;) las poblaciones Han y Han Chinese, plot(fFreq[,&quot;Han&quot;],fFreq[,&quot;Han Chinese&quot;],cex=0.2,col=&quot;yellow4&quot;,xlab=&quot;Han&quot;,ylab=&quot;Han Chinese&quot;,main=&quot;Frecuencias alelos ALT&quot;) o como la Luhya y la Yoruba: plot(fFreq[,&quot;Yoruba&quot;],fFreq[,&quot;Luhya&quot;],cex=0.2,col=&quot;blue2&quot;,xlab=&quot;Yoruba&quot;,ylab=&quot;Luhya&quot;,main=&quot;Frecuencias alelos ALT&quot;) De hecho, estos últimos dos pueblos son originarios del África. Mientras los Yorubas habitan los actuales territorios de Nigeria, Benin y Togo (en el occidente de África), los Luhya, que comprenden un número importante de grupos étnicos “Bantú”, habitan principalmente en la provincia occidental de Kenia, país que se encuentra del otro lado del continente. Antes, habíamos encontrado que los marcadores no estaban en equilibrio de Hardy-Weinberg cuando considerábamos el global de la población y explicamos la posible razón. Analizar si los marcadores en la población Yoruba se encuentran en equilibrio de Hardy-Weinberg #### YORUBA #### genot.Yoruba&lt;-genot[,which(unlist(lapply(colnames(genot),function(x)strsplit(x,&quot;_&quot;)[[1]][2]))%in%tb[tb$Population.name==&quot;Yoruba&quot;,&quot;Sample.name&quot;])] mita.Yoruba&lt;-t(apply(genot.Yoruba,1,function(x) table(x)[c(&quot;0/0&quot;,&quot;0/1&quot;,&quot;1/1&quot;)])) colnames(mita.Yoruba)&lt;-paste(&quot;geno&quot;,c(&quot;0/0&quot;,&quot;0/1&quot;,&quot;1/1&quot;),sep=&quot;&quot;) mita.Yoruba[is.na(mita.Yoruba)]&lt;-0 mita.Yoruba.rel&lt;-mita.Yoruba/apply(mita.Yoruba,1,sum) HWmarcadores.Yoruba&lt;-apply(mita.Yoruba,1,function(x) chisq.test(eqHWtabla(x))$p.value) hist(HWmarcadores.Yoruba,100,main=&quot;HW en marcadores YORUBA&quot;,xlab=&quot;p-values&quot;,ylab=&quot;Frecuencia&quot;) sum(HWmarcadores.Yoruba&lt;1e-2,na.rm=TRUE)/length(HWmarcadores.Yoruba) ## [1] 2.746498e-05 pval.bonferroni.Yoruba&lt;-p.adjust(HWmarcadores.Yoruba, method =&quot;bonferroni&quot;) sum(pval.bonferroni.Yoruba&lt;1e-2,na.rm=TRUE)/length(pval.bonferroni.Yoruba) ## [1] 0 Claramente, el número de marcadores (y la proporción) que no se encuentran en equilibrio HW es muy reducido, por lo que podemos inferir que, en principio, en esta población se estarían cumpliendo los supuestos del mismo. Ejercicio 1.1 Demostrar (a) que para un locus con dos alelos en una especie diploide en equilibrio Hardy-Weinberg, la diferencia de frecuencias alélicas es igual a la diferencia de frecuencia entre los homocigotos respectivos y (b) que esta diferencia es igual a \\(2p -1\\). Solución Supongamos que llamamos \\(p\\) y \\(q=1-p\\) a las frecuencias de los dos alelos. Para la parte (a) debemos demostrar que su diferencia es igual a la diferencia entre los genotipos homocigotos, es decir, \\(p-q=p^2-q^2\\). Para ellos utilizaremos el hecho de que multiplicar por 1 ambos lados de la ecuación y el hecho de que \\(p+q=1\\). \\[\\begin{aligned} (p-q)=1*(p-q)=(p+q)(p-q)=p^2+pq-pq-q^2=p^2-q^2\\end{aligned}\\] En tanto, para la parte (b) utilizaremos que \\(q=1-p\\), por lo que \\[\\begin{aligned} p-q=p-(1-p)=p-1+p=2p-1\\end{aligned}\\] 1.6 Análisis de Componentes Principales El análisis de tablas de datos como las que nos ocupan es un tema generalmente difícil dado el alto número de dimensiones del problema. Es decir, si para el mismo número total de celdas tuviésemos solamente dos columnas (es decir dos variables), se nos ocurre fácilmente que una forma de representar los datos es graficar una variable contra la otra. Sin embargo, cuando tenemos decenas, centenas o aún miles de variables como en nuestro caso, la representación gráfica de los datos es bastante más compleja. De hecho, está comprobado que la mayor parte de los humanos difícilmente consigue visualizar representaciones en más de 3 dimensiones. ¿Cómo hacemos entonces para explotar el poder de la visualización con datos multidimensionales? Una forma interesante es la que entiende que los datos se pueden considerar como una nube de puntos en un espacio n-dimensional y que por lo tanto podemos re-ordenar los ejes coordinados de este espacio, de tal forma que el primer eje se corresponda con la dirección que captura mayor variación en los datos, el segundo eje, ortogonal al primero, en la dirección que coincida con la mayor variablidad restante, el tercero (ortogonal a los dos primeros) en la dirección que coincida con la mayor variabilidad restante y así sucesivamente. Basicamente, esta es la idea del ANÁLISIS de COMPONENTES PRINCIPALES (PCA). Existen diferentes modos y herramientas para realizar una PCA en R, pero vamos a ver primero qsi podemos aplicar el método general. Para eso, primero debemos solucionar el problema de los datos faltantes (genotipos sin determinar), ya que la PCA no trabaja usualmente con datos faltantes. 1.6.1 PCA sin NA y con reducido número de marcadores Una primera aproximación consiste en eliminar aquellas filas o columnas que contengan datos faltantes, siempre que esto no reduzca en forma significativa el conjuntos de los datos. Veamos que ocurre en nuestro caso, es decir, analicemos si tenemos muchos datos faltantes y sobre todo, cómo se distribuyen. naSNPS&lt;-apply(ngenot,1,function(x) sum(is.na(x))) nageno&lt;-apply(ngenot,2,function(x) sum(is.na(x))) sort(naSNPS,decreasing=TRUE)[1:10] ## rs11810467 rs1450952 rs11634779 rs10467005 rs17148511 rs2801943 rs2303324 ## 54 52 52 51 46 41 39 ## rs2267670 rs2073725 rs7772351 ## 39 38 37 sort(nageno,decreasing=TRUE)[1:10] ## 1877_NA18520 1069_PT-912H 1082_PT-91CS 1140_PT-GLG1 1139_PT-GLFL 1429_NA17967 ## 3739 3096 2977 2970 2956 2697 ## 1062_PT-8ZVZ 1220_NA12843 1888_NA19248 1422_NA18146 ## 2610 2524 2503 2388 hist(naSNPS,50) hist(nageno,100) Es decir, tenemos algunos individuos con muchos datos faltantes (más de 2000) y tenemos varios marcadores que no tiene datos para muchos individuos. Una alternativa es ver la posibilidad de eliminar todos aquellos marcadores que tienen algún datos faltante (al menos uno). Veamos cuántos marcadores pasarían este flitro: sum(naSNPS==0) ## [1] 16133 Si bien es una reducción sustantiva, 16133 marcadores no son tan pocos y vale la pena tener una idea primaria de que ocurre si hacemos una PCA sobre este juego inicial de marcadores. Si bien no es la forma “correcta” de escalar los datos, en esta primera aproximación vamos a explorar que ocurre con la PCA cuando la hacemos en “correlación” (ver el parámetro cor=TRUE en la función), es decir, cuando escalamos las columnas de tal forma que todas tengan la misma variación. ngenot.sinna&lt;-ngenot[which(naSNPS==0),] mipca&lt;-princomp(ngenot.sinna[sample(1:(dim(ngenot.sinna)[1]),3000),],cor=TRUE) plot(mipca) biplot(mipca,cex=0.3) Si analizamos el primer gráfico, el de barras, vemos que hay 4 componentes de importancia, es decir que habría 4 dimensiones de los datos con información relvante, mientras que el resto sería variación relativamente “residual” (de menor orden, que no aporta demasiado a la interpretación del fenómeno global). Por otra parte, el segundo gráfico intenta representar en la misma visualización los marcadores y los individuos, lo que dado el importante número de ambos resulta en un gráfico imposible de interpretar. Si bien es posible ajustar los parámetros para mejorar sustancialmente la visualización, veremos más adelante que algunos paquetes resuleven este problema de manera muy satisfactoria y mayormente sin nuestra intervención. Finalmente, para saber si los marcadores que elegimos (aquellos sin datos faltantes) son una muestra representativa y sin sesgo del conjunto de todos los marcadores, al menos respecto al cromosoma de origen, podemos ver que ocurre en los dos conjuntos de datos y ver si la diferencia es significativa. (tsna&lt;-cbind(&quot;todos&quot;=table(snps[,&quot;CHROM&quot;]),&quot;sin.na&quot;=table(snps[which(naSNPS==0),&quot;CHROM&quot;]))) ## todos sin.na ## 1 5793 1451 ## 10 3964 976 ## 11 3649 697 ## 12 3531 730 ## 13 2745 592 ## 14 2477 434 ## 15 2281 545 ## 16 2183 560 ## 17 1968 450 ## 18 2205 539 ## 19 1212 219 ## 2 6066 1356 ## 20 1977 508 ## 21 1093 238 ## 22 1075 209 ## 3 5108 1127 ## 4 4288 997 ## 5 4610 1125 ## 6 5005 975 ## 7 4052 919 ## 8 4043 980 ## 9 3495 506 apply(tsna,2,sum) ## todos sin.na ## 72820 16133 chisq.test(tsna) ## ## Pearson&#39;s Chi-squared test ## ## data: tsna ## X-squared = 211.13, df = 21, p-value &lt; 2.2e-16 Claramente, el valor del test de \\(\\chi^2\\) es altamente significativo, lo que significa que ambos juegos de marcadores difieren en la proporción que representa a cada cromosoma. t(t(tsna)/apply(tsna,2,sum)) ## todos sin.na ## 1 0.07955232 0.08993987 ## 10 0.05443559 0.06049712 ## 11 0.05010986 0.04320337 ## 12 0.04848943 0.04524887 ## 13 0.03769569 0.03669497 ## 14 0.03401538 0.02690138 ## 15 0.03132381 0.03378169 ## 16 0.02997803 0.03471146 ## 17 0.02702554 0.02789314 ## 18 0.03028014 0.03340978 ## 19 0.01664378 0.01357466 ## 2 0.08330129 0.08405132 ## 20 0.02714913 0.03148825 ## 21 0.01500961 0.01475237 ## 22 0.01476243 0.01295481 ## 3 0.07014556 0.06985682 ## 4 0.05888492 0.06179880 ## 5 0.06330678 0.06973285 ## 6 0.06873112 0.06043513 ## 7 0.05564405 0.05696399 ## 8 0.05552046 0.06074506 ## 9 0.04799506 0.03136428 1.7 Paquetes específicos para genética de poblaciones (adegenet y hierfstat) Hasta acá hemos trabajado esencialmente con los distintos componentes básicos de información que existen en un archivo VCF en forma separada. El motivo de esto fue el de explorar y entender dichos componentes a cabalidad, así como entender que nosotros podemos especificar fácilmente las operaciones sobre los datos que sean de nuestro interés. Sin embargo, existen diferentes paquetes en R que nos permiten trabajar con datos de genética de poblaciones. Uno de estos paquetes es adegenet. Si no lo tienes instalado, es fácil hacerlo con install.packages(“adegenet”, dep=TRUE). Lo primero que vamos a hacer entonces es crear un objeto de la clase “genind”, una clase central para este paquete y de la que podremos utilizar diversas funciones directamente. Es importante notar que la función df2genind(), encargada de crear el objeto de clase “genind” a partir de la tabla de genotipos (y de otra información, por ejemplo la tabla de poblaciones), utiliza el formato del tipo “0/0”, “0/1”, “1/1” de nuestros datos, por lo que si queremos trabajar con los datos que están en la tabla del IGSR debemos subsetear ahora la tabla de genotipos en dicho formato. # install.packages(&quot;adegenet&quot;, dep=TRUE) library(&quot;adegenet&quot;) ## Loading required package: ade4 ## ## /// adegenet 2.1.8 is loaded //////////// ## ## &gt; overview: &#39;?adegenet&#39; ## &gt; tutorials/doc/questions: &#39;adegenetWeb()&#39; ## &gt; bug reports/feature requests: adegenetIssues() genot.estan&lt;-genot[,muestras.que.estan] colnames(genot.estan)&lt;-nombresengenot[which(nombresengenot%in%ta$Sample.name)] genpop&lt;-df2genind(t(genot.estan[sample(1:dim(genot)[1],3000),]),sep=&quot;/&quot;,pop=tb$Population.name) class(genpop) ## [1] &quot;genind&quot; ## attr(,&quot;package&quot;) ## [1] &quot;adegenet&quot; Para ver los distintos “slots” que tenemos en este objeto, podemos hacer simplemente: # los slots que existen en este objeto names(genpop) ## [1] &quot;tab&quot; &quot;loc.fac&quot; &quot;loc.n.all&quot; &quot;all.names&quot; &quot;ploidy&quot; &quot;type&quot; ## [7] &quot;other&quot; &quot;call&quot; &quot;pop&quot; &quot;strata&quot; &quot;hierarchy&quot; Una forma sencilla que ya probamos para extraer información de los “slots” es acceder a ellos directamente a través del operador “arroba”, pero mejor aún, existen funciones específicas (más seguras) para acceder a los correspondientes “slots”: # un trozo de la tabla de genotipos genpop@tab[1:10,1:10] ## rs2899887.0 rs2899887.1 rs958877.0 rs958877.1 rs6455553.1 rs6455553.0 ## HGDP00479 2 0 2 0 2 0 ## HGDP00985 2 0 2 0 0 2 ## HGDP01094 2 0 2 0 1 1 ## HGDP00982 2 0 2 0 1 1 ## HGDP00911 2 0 2 0 2 0 ## HGDP01202 2 0 2 0 2 0 ## HGDP00461 2 0 2 0 2 0 ## HGDP00986 2 0 2 0 2 0 ## HGDP00449 2 0 2 0 2 0 ## HGDP00912 2 0 2 0 2 0 ## rs12931133.0 rs12931133.1 rs2041794.0 rs2041794.1 ## HGDP00479 2 0 1 1 ## HGDP00985 2 0 2 0 ## HGDP01094 2 0 2 0 ## HGDP00982 2 0 0 2 ## HGDP00911 2 0 1 1 ## HGDP01202 2 0 1 1 ## HGDP00461 2 0 2 0 ## HGDP00986 2 0 1 1 ## HGDP00449 2 0 1 1 ## HGDP00912 2 0 2 0 # Mejor aún, podemos extraerlo con una función específica tab(genpop)[1:10,1:10] ## rs2899887.0 rs2899887.1 rs958877.0 rs958877.1 rs6455553.1 rs6455553.0 ## HGDP00479 2 0 2 0 2 0 ## HGDP00985 2 0 2 0 0 2 ## HGDP01094 2 0 2 0 1 1 ## HGDP00982 2 0 2 0 1 1 ## HGDP00911 2 0 2 0 2 0 ## HGDP01202 2 0 2 0 2 0 ## HGDP00461 2 0 2 0 2 0 ## HGDP00986 2 0 2 0 2 0 ## HGDP00449 2 0 2 0 2 0 ## HGDP00912 2 0 2 0 2 0 ## rs12931133.0 rs12931133.1 rs2041794.0 rs2041794.1 ## HGDP00479 2 0 1 1 ## HGDP00985 2 0 2 0 ## HGDP01094 2 0 2 0 ## HGDP00982 2 0 0 2 ## HGDP00911 2 0 1 1 ## HGDP01202 2 0 1 1 ## HGDP00461 2 0 2 0 ## HGDP00986 2 0 1 1 ## HGDP00449 2 0 1 1 ## HGDP00912 2 0 2 0 Como mencionamos más arriba, es importante notar que la transformación de nuestros datos que estaban en formato “0/0”, “0/1”, “1/1” se pasaron al formato numérico que usamos antes. La conversión fue automática y como también dijimos previamente, esto permite trabajar cómodamente con funciones matemáticas en lugar de con funciones sobre texto. La función pop() extrae las poblaciones a las que corresponden las muestras de este objeto. Con este dato, por ejemplo, podemos graficar el tamaño de muestra para las distintas poblaciones haciendo: barplot(table(pop(genpop)), col=funky(17), las=3,xlab=&quot;&quot;, ylab=&quot;Tamaño de muestra&quot;,cex.names=0.5) Un paso importante es resumir la información existente en nuestra muestra, cosa que podemos hacer usando la función summary() y ya de paso verificar la proporción de datos (genotipos) faltantes: temp &lt;- summary(genpop) names(temp) ## [1] &quot;n&quot; &quot;n.by.pop&quot; &quot;loc.n.all&quot; &quot;pop.n.all&quot; &quot;NA.perc&quot; &quot;Hobs&quot; ## [7] &quot;Hexp&quot; # PORCENTAJE DE DATOS FALTANTES temp$NA.perc ## [1] 0.09409177 # VERIFICACIÓN sum(is.na(genpop@tab))/(dim(genpop@tab)[1]*dim(genpop@tab)[2]) ## [1] 0.0009409177 Por otra parte, a partir de este resumen también podemos estudiar el comportamiento de la heterocigosidad observada respecto a la esperada para todos los marcadores, buscando aquellos marcadores que más se apartan de lo esperado. plot(temp$Hexp, temp$Hobs, pch=20, cex=0.75, xlim=c(0,.55), ylim=c(0,.55),xlab=&quot;Hexp&quot;,ylab=&quot;Hobs&quot;) abline(0,1,lty=2,col=&quot;red&quot;) ¿Cómo es el comportamiento de la heterocigosidad observada respecto a la esperada? ¿Es en general mayor la observada o la esperada? ¿A qué se puede deber esto? 1.8 El Coeficiente de endocría y estadísticos F (introducción teórica) Como ya vimos previamente, las poblaciones de muchas especies se encuentran estructuradas en sub-poblaciones, cada una de ellas con su propia dinámica evolutiva. Por ejemplo, dentro de una región tenemos diferentes cuencas, que a su vez tienen diversos afluentes, que cada una de ellos posee una conexión con diferentes espejos de agua. Eso nos permite identificar, en forma arbitraria al principio, diferentes niveles dentro de una jerarquía: cuencas, dentro de ellas afluentes y dentro de los mismos los espejos de agua. La estructura puede ser también mucho más sencilla, con un par de niveles, por ejemplo poblaciones aisladas (por una barrera física, por ejemplo) dentro de un conjunto regional de las mismas (ensemble). En este sentido, en lo que nos atañe en este momento, la estructura reproductiva de cada población del ensemble puede seguir sus propios patrones, lo que se reflejará también en la relación entre frecuencias alélicas y genotípicas de cada una de ellas. Como vimos antes, el apartamiento del apareamiento al azar se refleja usualmente en una carencia de heterocigotos respecto a lo esperado para el equilibrio de Hardy-Weinberg. Es más, definimos un índice de fijación \\(F\\) como la probabilidad de encontrar en un locus dos alelos idénticos por ascendencia y vimos que la pérdida de heterocigotos era igual a \\(2pqF\\). Sin embargo, al tener distintas poblaciones (y por lo tanto niveles, por ejemplo individuos, poblaciones, ensemble) necesitamos de alguna forma entender a qué nivel se producen los apartamientos respecto al equilibrio Hardy-Weinberg. Para esto definiremos una serie de estadísticos, primero para representar la heterocigosidad observada y esperada a distintos niveles y luego unos estadísticos de fijación análogos a nuestro \\(F\\). En la figura 1.2 se observa una representación de una estructura poblacional, de una especie diploide, donde diferentes poblaciones (enmarcadas por recuadros verdes) poseen una diferente proporción de alelos de dos colores, rojo y azul, así como distintas proporciones de los 3 genotipos. Todas estas poblaciones se encuentran agregadas en un gran ensemble, encuadrado en azul. Figura 1.2: Estructuración de una gran población (marco en azul) como un ensemble de poblaciones (marcos en verde) y las distribución de la heterocigosidad observada y esperada a los distintos niveles de agregación, así como los correspondientes estadísticos. Claramente, dentro de cada población es posible contar la proporción de individuos heterocigotas (si estos fuesen distinguibles por su fenotipo, o si lo podemos hacer a nivel molecular) y por lo tanto, si tenemos \\(n\\) poblaciones, para cada una de ellas obtendremos un estimador \\(\\hat{H}_i\\). Decimos que obtenemos un estimador, y por eso lo señalamos con el “gorro” (\\(\\hat{}\\)) porque normalmente solo tenemos una muestra de individuos de cada población. Una manera sencilla de resumir la información respecto a la proporción de heterocigotas de cada una de ellas será la media de la heterocigosidad, es decir \\[\\begin{equation} H_I=\\frac{1}{n}\\sum_{i=1}^n\\hat{H}_i \\tag{1.2} \\end{equation}\\] Se trata, en este caso de una forma de resumir la información sobre la heterocigosidad observada, producto de los \\(F\\) a nivel individual y por eso el subíndice \\(I\\). Para cuantificar la reducción respecto a lo esperado con dicha estructura, en primer lugar debemos calcular una medida resumen de lo esperado en cada población si las mismas se aparearan (a la interna) al azar. Otra vez, una medida sencilla lo constituye la media de lo esperado en cada una. Por lo tanto, \\[\\begin{equation} H_S=\\frac{1}{n}\\sum_{i=1}^n2p_iq_i \\tag{1.3} \\end{equation}\\] ya que en cada una de las \\(n\\) poblaciones las frecuencias alélicas pueden ser diferentes y por eso el \\(p_i\\) y \\(q_i=1-p_i\\). En este punto solo nos queda definir un nivel de heterocigosidad. Si ponemos todos los individuos juntos, sin importar de que población vengan, entonces la heterocigosidad esperada global es igual a \\[\\begin{equation} H_T=2\\bar{p}\\bar{q} \\tag{1.4} \\end{equation}\\] Con todos estos estimadores de heterocigosidad en mano estamos ahora en condiciones de entender la estructura de la pérdida de heterocigosisidad, es decir, a qué nivel y cuánto se da la pérdida. El primer nivel, dentro de la estructura representada en la figura 1.2 es el que corresponde a la pérdida entre lo esperado y lo observado dentro de las poblaciones. Como nuestras medidas de heterocigosis esperada y observada son \\(H_S\\) y \\(H_I\\) respectivamente, la diferencia entre ellos, estandarizada por la esperada será nuestro índice de fijación a nivel intra población, es decir \\[\\begin{equation} F_{IS}=\\frac{H_S-{H}_I}{H_S} \\tag{1.5} \\end{equation}\\] En este caso, las letras que aparecen en el súbíndice representan lo individual o intra-población (\\(I\\)) versus lo esperado para la población (\\(S\\) de sub-población). Más aún, \\(F_{IS}\\) es exactamente igual al \\(F\\) definido previamente, en la medida de que la media represente adecuadamente lo que ocurre dentro de cada población. En nuestra estructura, el siguiente nivel sería comparar lo esperado en la población total con lo esperado si se cumpliese el equilibrio de Hardy-Weinberg en cada una de las poblaciones. Una nota importante es que aún cumpliéndose el equilibrio de Hardy-Weinberg en cada población no necesariamente se cumple cuando consideramos a todos los individuos en conjunto. Un ejemplo claro de esto podemos verlo en la figura 1.3. Dos poblaciones de ovejas en lados opuestos de un río han fijado diferentes alelos para el color: a la izquierda blanco, a la derecha verde. Dentro de cada población las ovejas se aparean libremente, por lo que podemos esperar el equilibrio Hardy-Weinberg. El río es una barrera infranqueable para las ovejas, por lo que no hay migración entre ambas poblaciones. Si, mientras recorremos el río en bote, capturamos a las ovejas que pastan en la ribera (el mismo número en una ribera que en la otra), les extraemos una muestra y luego secuenciamos el locus “del color” (en principio no existe dicha cosa, la herencia del color en mamíferos es extremadamente compleja) vamos a llegar a unos números que nos llamarán la atención. Mientras que las frecuencias del alelo blanco y del verde son iguales, es decir \\(p=q\\), por lo que esperamos \\(2pq=2 \\frac{1}{2}\\frac{1}{2}=\\frac{1}{2}\\) heterocigotos. Sin embargo, en nuestra muestra no hay ningún individuo heterocigoto ya que las ovejas son de dos poblaciones en las que se ha fijado el alelo para el color, por lo que al considerar todo el ensemble (a través de una muestra de ambas poblaciones) nos encontramos con un déficit enorme de heterocigotos. La razón es obvia: se trata de una forma de estructura de apareamiento no-completamente-al-azar (ya que los individuos solo se pueden aparear con los de su población) y por lo tanto existirá una carencia de heterocigotos, como ya vimos en la sección [Generalización de Hardy-Weinberg para apareamientos no-aleatorios]. Más allá de ser obvia la razón, lo veremos en más detalle en la seccción referida al [El efecto Wahlund]. Figura 1.3: Reducción en el número de heterocigotos a causa de la estructuración en poblaciones disjuntas. Las ovejas a ambos lados del río, una barrera infranqueable para las mismas, han fijado alelos diferentes para el color de la lana. Si muestreamos las ovejas que aparecen en la ribera, aproximadamente igual número a ambos lados, obtendremos una frecuencia intermedia para los alelos blanco y verde, por lo que esperamos cerca del \\(50\\%\\) de heterocigotos (\\(2pq=2 \\frac{1}{2}\\frac{1}{2}=\\frac{1}{2}\\)), pero en realidad no hay ningún individuo heterocigoto ya que los alelos están fijados en las dos poblaciones (diseño de las ovejas de http://cliparts.co/clipart/2377087 Fuente: Cliparts.co). Como hicimos para \\(F_{IS}\\), para definir el índice de fijación de las (sub) poblaciones respecto al total vamos a hacer la resta de la heterocigosidad total esperada respecto a la esperada para las poblaciones y estandarizamos diviendo entre la heterocigosidad total esperada. Esta, no es ni más ni menos que \\(2\\bar{p}\\bar{q}\\), con \\(\\bar{p}\\) y \\(\\bar{q}=1-\\bar{p}\\) las frecuencias en toda el ensemble en su conjunto. Es decir, el índice de fijación de las subpoblaciones respecto al total será \\[\\begin{equation} F_{ST}=\\frac{H_T-H_S}{H_T} \\tag{1.6} \\end{equation}\\] Finalmente, con la misma lógica podemos definir el índice de fijación entre lo que ocurre dentro de las poblaciones y el total como \\[\\begin{equation} F_{IT}=\\frac{H_T-H_I}{H_T} \\tag{1.7} \\end{equation}\\] Todos estos índices deben ser entendidos en conjunto. De hecho, Wright planteó la relación entre ellos (S. Wright (1943); WRIGHT (1951)) como: \\[\\begin{equation} F_{ST} = \\frac{(F_{IT}-F_{IS})}{(1-F_{IS})} \\tag{1.8} \\end{equation}\\] Es posible llegar a otra forma de la relación entre los índices, también muy informativa. Operando con la ecuación (1.9), tenemos que \\[\\begin{equation} (1-F_{IS})F_{ST}=F_{IT}-F_{IS} \\therefore \\\\ F_{IT}=F_{ST}+F_{IS}-F_{ST}F_{IS} \\tag{1.9} \\end{equation}\\] Multiplicando por \\(-1\\) y sumando \\(1\\) a ambos lados, tenemos \\[\\begin{equation} -F_{IT}=-F_{ST}-F_{IS}+F_{ST}F_{IS} F_{ST}+F_{IS} \\Leftrightarrow \\\\ 1-F_{IT}=1-F_{ST}-F_{IS}+F_{ST}F_{IS} F_{ST}+F_{IS} \\tag{1.10} \\end{equation}\\] Pero \\((1-F_{ST})(1-F_{IS})=1-F_{ST}-F_{IS}+F_{ST}F_{IS} F_{ST}+F_{IS}\\), por lo que poniendo todo junto, la ecuación (1.10) se transforma en \\[\\begin{equation} (1-F_{IT})=(1-F_{ST})(1-F_{IS}) \\tag{1.11} \\end{equation}\\] Por lo que vimos, \\(F_{ST}\\) representa la diferenciación genética a causa de la estructuración en poblaciones independientes. En general no resulta trivial interpretar su valor sin el apoyo de más evidencia proveniente de otras fuentes, pero como forma de orientación, Hartl and Clark (2007) proponen una serie de guías prácticas dadas por Sewall Wright (1978) que pueden ayudar a entender la situación. Estas son: Valores de \\(0 \\leqslant F_{ST} &lt; 0,05\\) indicarían POCA diferenciación genética Valores de \\(0,05 \\leqslant F_{ST} &lt; 0,15\\) indicarían diferenciación genética MODERADA Valores de \\(0,15 \\leqslant F_{ST} &lt; 0,25\\) indicarían GRAN diferenciación genética Valores de \\(F_{ST} \\geqslant 0,25\\) indicarían MUY GRANDE diferenciación genética Sin embargo, como también mencionan Hartl and Clark (2007), el mismo Sewall Wright (1978) advierte que aún valores de \\(F_{ST}\\) menores a \\(0,05\\) podrían estar indicando una diferenciación genética significativa, por lo que la interpretación de estos valores no es inmediata Los estadísticos \\(F\\) son muy usados para comprender la diversidad genética aún entre especies cercanas. Así, por ejemplo, Loáisiga et al. (2012) en un estudio sobre la diversidad del teosinte, una planta que junto con el maíz (Zea mays) forman el género Zea, comparan seis especies diferentes muy relacionadas entre sí en diferentes regiones de Centroamérica. Como los híbridos F1 de teosinte x maíz son fértiles, estas especies representan un reservorio importante de material genético para mantener la diversidad del maíz o aún para introducir variantes de genes importantes para la producción (resistencia a patógenos, tolerancia a metales pesados, etc.). Para estudiar la diversidad estos autores utilizan un juego de 21 microsatélites (SSR) en 120 individuos, detectando un total de 109 alelos diferentes. A partir del análisis de las frecuencias de los alelos y de los genotipos, calculan para el conjunto de las especies un \\(F_{IS}=0,0815\\), mientras que el \\(F_{ST}=0,2017\\). Con estos datos resulta claro que el apartamiento de Hardy-Weinberg dentro de las poblaciones es relativamente pequeño, mientras que la mayor parte de la diferenciación aparece entre especies (el equivalente a las poblaciones en nuestros razonamientos previos). De esta forma, el estudio sugiere que es fundamental la conservación de las diferentes especies ya que es donde reside la mayor parte de la diversidad. Ejemplo 1.1 Consideremos un ensemble de poblaciones constituido por las 3 poblaciones que aparecen en la figura 1.2. Veamos si existe deficiencia de heterocigotos a algún nivel que nos permita sospechar apareamientos no-aleatorios dentro de las mismas o alguna estructuración geográfica. Parámetro Población 1 Población 2 Población 3 Media \\({fr(rojo)}\\) \\(p_1=\\frac{13}{24}=0,542\\) \\(p_2=\\frac{12}{24}=0,500\\) \\(p_3=\\frac{7}{24}=0,292\\) \\(\\bar{p}=\\frac{32}{72}=0,444\\) \\(\\hat{H}\\) \\(H_1=\\frac{5}{12}=0,417\\) \\(H_2=\\frac{2}{12}=0,167\\) \\(H_3=\\frac{1}{12}=0,083\\) \\(\\frac{8}{36}=0,222\\) \\(2p_iq_i\\) \\(2\\frac{13}{24}\\frac{11}{24}=0,497\\) \\(2\\frac{12}{24}\\frac{12}{24}=0,500\\) \\(2\\frac{7}{24}\\frac{17}{24}=0,413\\) \\(0,470\\) Primero vamos a calcular todos los índices de heterocigosidad. La heterocigosidad observada está dada por la ecuación (1.2), es decir (con \\(n=3\\)) \\[\\begin{equation} H_I=\\frac{1}{n}\\sum_{i=1}^n\\hat{H}_i=0,222 \\end{equation}\\] que es el valor en la última columna del cuadro anterior, en la fila correspondiente a la heterocigosidad observada. Si en cada población los apareamientos fuesen al azar esperaríamos en cada una de ellas una proporción de heterocigotos igual a \\(2p_iq_i\\), que es la que figura en la tercera línea del cuadro anterior y por lo tanto, la heterocigosidad media esperada, de acuerdo a la ecuación (1.3), es \\[\\begin{equation} H_S=\\frac{1}{n}\\sum_{i=1}^n2p_iq_i=0,470 \\end{equation}\\] Finalmente, la heterocigosidad total esperada, de acuerdo a la ecuación (1.4), es \\[\\begin{equation} H_T=2\\bar{p}\\bar{q}=2\\bar{p}(1-\\bar{p})=2 \\times 0,444 \\times (1-0,444)=0,494 \\end{equation}\\] A partir de estos datos podemos calcular ahora los índices de fijación correspondientes. El primero, el que hace a la estructura interna de las poblaciones está dado por la ecuación (1.5) y es por lo tanto \\[\\begin{equation} F_{IS}=\\frac{H_S-{H}_I}{H_S}=\\frac{0,470-0,222}{0,470}=0,528 \\end{equation}\\] Basados en este número, podemos decir que se trata de un valor realmente alto y que por lo tanto dentro de las poblaciones (o alguna de ellas) el apareamiento se aparta claramente de lo esperable para las condiciones de panmixia. Veamos que ocurre al segundo nivel, es decir el índice de fijación de las poblaciones respecto al total de los individuos, que podemos calcular a partir de la ecuación (1.6) \\[\\begin{equation} F_{ST}=\\frac{H_T-H_S}{H_T}=\\frac{0,494-0,470}{0,494}=0,0486 \\end{equation}\\] En este caso, el índice de fijación es bastante menor. De acuerdo a las guías prácticas dadas por Sewall Wright (1978), se trata de un valor (apenas) menor a \\(0,05\\) y por lo tanto indicativo de poca diferenciación genética entre poblaciones. El índice de fijación entre el nivel más y menos inclusivo está dado por la ecuación (1.7), es decir \\[\\begin{equation} F_{IT}=\\frac{H_T-H_I}{H_T}=\\frac{0,494-0,222}{0,494}=0,551 \\end{equation}\\] Para verificación, usando la ecuación (1.11), tenemos que \\[\\begin{equation} (1-F_{IT})=(1-F_{ST})(1-F_{IS})=(1-0,0486)(1-0,528)=0,449 \\Leftrightarrow F_{IT}=1-0,449=0,551 \\end{equation}\\] que es igual al valor que obtuvimos directamente. En nuestro caso, entonces, se trata de un ensemble de poblaciones donde la mayor parte del deficit de heterocigotos que hemos encontrado se debe un apareamiento no-aleatorio dentro de las poblaciones que lo constituyen y en mucho menor medida debido a la diferenciación genética entre poblaciones. Una manera alternativa de pensar en \\(F_{ST}\\) es en términos de partición de la varianza en frecuencias de los alelos. En particular, si pensamos que cada población en un conjunto grande de poblaciones formando el ensemble tiene sus propias frecuencias \\(p_i\\) y \\(q_i\\), la varianza en las frecuencia de \\(p\\), \\(\\sigma^2_{\\bf{p}}\\), estará dada por \\[\\begin{equation} \\sigma^2_{\\bf{p}}=\\frac{1}{n}\\sum_{i=1}^n(p_i-\\bar{p})^2 \\tag{1.12} \\end{equation}\\] Lo mismo para \\(q\\), cuya varianza será igual a la de \\(p\\) y por lo tanto la varianza en frecuencias igual a \\(\\sigma^2_{\\bf{p}}\\). Para comparar esta varianza con la del nivel más inclusivo la dividimos entre \\(2\\bar{p}\\bar{q}=\\bar{p}(1-\\bar{p})\\) y por lo tanto \\[\\begin{equation} F_{ST}=\\frac{2\\sigma_{\\bf{p}}^2}{2\\bar{p}(1-\\bar{p})}=\\frac{\\sigma_{\\bf{p}}^2}{\\bar{p}(1-\\bar{p})} \\tag{1.13} \\end{equation}\\] Pese a su importancia, los estadísticos \\(F\\) han estado sujetos a diferentes interpretaciones, sumado a diferentes formas de calcularlos y a partir de fuentes de información diferente, lo que ha generado no poca confusión. Una revisión importante del tema, con un enfoque en lo que pueden aportar diferentes partes del genoma se encuentra en Holsinger and Weir (2009). 1.8.1 Estadísticos F (práctico) Como discutimos previamente, nuestros individuos pertenecen a distintas poblaciones. Además de entender las relaciones entre ellas, usualmente es necesario cuantificar la diferenciación genética entre las mismas y existen diferentes estadísticos que representan esta estructuración en niveles. Algunos de estos son los estadísticos \\(F\\) de Wright, en particular el \\(F_{ST}\\). Estos se basan en la heterocigosidad observada y esperada a diferentes niveles jerárquicos de la estructura y utilizan como insumos (entre otros) la heterocigosidad observada (\\(H_o\\)), la (a veces) llamada heterocigosidad esperada o diversidad genética dentro de poblaciones (\\(H_s\\)) y la diversidad genética total (\\(H_t\\), a veces llamada heterocigosidad total). El paquete hierfstat posee diversas funciones para trabajar en genética de poblaciones, funciones que me permiten trabajar directamente sobre objetos de la clase “genind”. Por ejemplo, para calcular algunos de estos estadísticos podemos hacer: # library(devtools) # install_github(&quot;jgx65/hierfstat&quot;) library(&quot;hierfstat&quot;) ## ## Attaching package: &#39;hierfstat&#39; ## The following objects are masked from &#39;package:adegenet&#39;: ## ## Hs, read.fstat bs.gp&lt;-basic.stats(genpop) boxplot(bs.gp$perloc[,1:3],notch=TRUE,col=c(&quot;green&quot;,&quot;blue&quot;,&quot;red&quot;)) bs.gp$overall ## Ho Hs Ht Dst Htp Dstp Fst Fstp Fis Dest ## 0.2881 0.2913 0.3328 0.0415 0.3334 0.0420 0.1246 0.1261 0.0112 0.0593 Prueba a consulta la ayuda de la función basic.stats() para entender lso diversos estadísticos reportados. De acuerdo al estadístico \\(F_{ST}\\), ¿Existe diferenciación genética importante entre las distintas poblaciones que forman parte de nuestros datos? Por ejemplo, si queremos sacar estadísticos \\(F\\) por poblaciones, podemos hacer: micol&lt;-as.factor(tb$Population.name) levels(micol)&lt;-colors()[sample(1:665,length(levels(micol)))] betaiovl&lt;-betas(genpop)$betaiovl barplot(betaiovl,las=2,cex.names=0.5,col=as.character(levels(micol)),las=3) 1.9 Anális de PCA usando paquetes de genética de poblaciones Previamente intentamos identificar la estructura de nuestros datos haciendo un análisis de componentes principales. En ese caso, trabajamos con un paquete estándar y sin transformar los datos en forma adecuada. Obviamente, como era de esperar, no pudimos sacar demasiadas conclusiones de dicha aproximación. Veamos ahora qué ocurre si utilizamos algún paquete específico para realizar dicho análisis. Vamos a utilizar la función indpca() del paquete “hierfstat” y vamos en primer lugar a representar los datos utilizando la coloración de acuerdo a la población a la que pertenecen los individuos. El análisis puede llevar un rato, por lo que no hay que ponerse nervioso. # COLOREADO POR POBLACIÓN x&lt;-indpca(genpop) micol&lt;-as.factor(tb$Population.name) levels(micol)&lt;-colors()[sample(1:665,length(levels(micol)))] plot(x,col=as.character(micol),cex=0.5) ¿Cómo interpretamos el resultado de este análisis? Por un lado, podemos imaginarnos que los datos se encuentran distribuidos de forma tal que todos los individuos se encuentran dentro de un triángulo. ¿Qué representan los vértices de dicho triángulo? ¿Y las aristas? En general, los dos primeros ejes de una PCA con poblaciones de todo el mundo tienden a tener esta forma, con los vértices representando poblaciones que divergieron hace muchísimo tiempo: la africana, la europea y la asiática. Más aún, si prestamos atención, el eje 1 de la PCA (que es el que corresponde a la mayor variabilidad) separa netamente a la población africana de las otras dos. La población africana es origen de las otras dos, las que mantuvieron un intercambio mucho más nutrido que con la población africana. Por otra parte, claramente observamos individuos distribuidos en las aristas entre dos de las superpoblaciones de los vértices: en ese caso, se trata (generalmente) de mestizaje entre las mismas. Por ejemplo, los Mozabite que son poblaciones del norte de África aparecen en la arista que une africanos y europeos, lo que no es de extrañar dado el histórico intercambio genético entre dichos pueblos (europeos y africanos del norte). Por otro lado, en la arista que une europeos y asiáticos aparecen la mayor parte de los grupos nativos americanos. La razón más sencilla para esto es el profundo mestizaje ocurrido con los europeos (especialmente españoles y portugueses) luego de la conquista de nuestro continente por parte de los europeos. La misma estructura de la PCA podemos observarla ahora considerando las superpoblaciones a las que pertenecen los individuos: # COLOREADO POR SUPERPOBLACIÓN micol2&lt;-as.factor(tb$Superpopulation.name) levels(micol2)&lt;-colors()[sample(1:665,length(levels(micol2)))] plot(x,col=as.character(micol2),cex=0.5) 1.10 OTRA FORMA DE HACER PCA Otra forma alternativa de realizar la PCA es usando directamente la función dudi.pca() (que utiliza el paquete “hierfstat”). Para esto debemos sacarnos de arriba antes el problema de los datos faltantes. 1.10.1 IMPUTACIÓN Una alternativa mucho más eficiente que eliminar los datos es la de imputar los datos faltantes. Existen paquetes generales que me permiten hacer este tipo de operaciones y uno de ellos es Amelia. La idea de la imputación es que tanto la columna de interés como el resto de la columnas poseen información que me permiten hacer una “educated guess” del valor faltante. Una de las posibilidades más simple, aunque no la mejor, es sustituir los valores faltantes por la media de la columna. Sin embargo, esta opción ignora la información que pueden aportar las otras columnas. Por ejemplo, una alternativa es considerar que de alguna manera las otras columnas pueden predecir el valor de la columna de interés y por lo tanto, condicional a la información de las otras columnas, puedo obtener una predicción para mi dato faltante. Una de las posibilidades interesantes de la imputación con componente estocástico (es decir, con un componente aleatorio) es que puedo realizarla muchas veces y realizar tantos análisis como juegos de datos imputados, para ver la sensibilidad de mis conclusiones a los datos faltantes. En este caso, vamos a utilizar la forma más sencilla que es la imputación por la media, usando en este caso una función provista directamente en el método de acceso tab() que ya vimos antes. x.sinna &lt;- tab(genpop, freq=TRUE, NA.method=&quot;mean&quot;) pca.x&lt;-dudi.pca(df = x.sinna, center = TRUE, scale = FALSE, scannf = FALSE, nf = 2) s.class(pca.x$li, fac=pop(genpop), col=funky(78),clabel=0.65) add.scatter.eig(pca.x$eig[1:50],3,1,2, ratio=.3) Como discutimos previamente, en la PCA existe un ordenamiento de los distintos ejes de acuerdo a la varianza explicada, cada uno explicando menos varianza que el previo. Por lo tanto, es importante poder entender qué número de ejes es necesario conservar para tener una representación adecuada de los datos. Una forma es la visualización en un gráfico de barras, lo que usualmente como “screeplot”. En el gráfico anterior, el inserto abajo a la izquierda representa un gráfico de este tipo. Claramente, los dos primeros ejes capturan una parte importante de la varianza. Veamos en números lo que eso representa: # PORCENTAJE DE LA VARIANZA EN LOS PRIMEROS EJES eig.perc &lt;- 100*pca.x$eig/sum(pca.x$eig) eig.perc[1:5] ## [1] 8.0011120 5.4620389 1.2683616 0.7795280 0.5981882 cumsum(eig.perc)[1:5] ## [1] 8.001112 13.463151 14.731513 15.511041 16.109229 plot(cumsum(eig.perc)[1:30],type=&quot;b&quot;,col=&quot;red&quot;,xlab=&quot;hasta el eje&quot;,ylab=&quot;varianza explicada acumulada&quot;,pch=21,bg=&quot;blue&quot;) Observando estos números, así como el gráfico, se aprecia claramente que entre los dos primeros ejes explican un poco más de \\(13.3\\%\\) de la varianza, lo que parece muy poco. Sin embargo, cuando consideramos que redujimos las complejidad de miles de columnas con información (marcadores/individuos) a una representación en dos dimensiones, en ese contexto se aprecia la importancia de este resultado. Por otra parte, una forma de entender la importancia de los distintos marcadores en las dimensiones de la PCA, es decir en los nuevos ejes del sistema coordenado, podemos estudiar las cargas correspondientes. En nuestro caso, podemos llamar directamente a una función capaz de graficar esto o podemos hacer las cuentas sobre el objeto resultante de dudi.pca(): # LOADING PLOT loadingplot(pca.x$c1^2,cex.lab=0.5) # SNPS más importantes en EJE1 head((pca.x$c1^2)[order(pca.x$c1[,1],decreasing=TRUE),]) ## CS1 CS2 ## rs2009296.0 0.001684070 5.076293e-05 ## rs7682426.0 0.001657271 1.998290e-06 ## rs971329.0 0.001643506 2.796775e-04 ## rs7337946.0 0.001643452 1.523123e-04 ## rs1521151.0 0.001587603 4.781105e-05 ## rs6596059.0 0.001579135 9.189075e-05 ¿Qué marcadores tienen mayor influencia en el eje 1? 1.11 ENSEMBL y biomaRt Hasta ahora nos centramos en el análisis de nuestros datos, pero usualmente es necesario vincular esta información con la que existe en otras bases de datos. Una herramienta fundamental en este sentido es el paquete “biomaRt” de bioconductor (un proyecto paraguas para paquetes de R en el área de genómica y biología molecular). Vamos a experimentar brevemente con “biomaRt” y explorar algunas posibilidades sencillas, pero las capacidades del paquete son enormes. Lo primero con “biomaRt” es definir los datos con los que vamos a trabajar. Para ello es necesario definir la base de datos (Mart), así como el juego de datos de nuestro interés. Comencemos trabajando con la base de datos de SNPs (“ENSEMBL_MART_SNP”) y el juego de datos de humano (“hsapiens_snp”). library(&quot;biomaRt&quot;) ensembl &lt;- useMart(&quot;ENSEMBL_MART_SNP&quot;, dataset = &quot;hsapiens_snp&quot;) Luego de habernos conectado a la base de datos, podemos ver los filtros que podemos aplicar y los atributos de la base de datos. Los filtros serán nuestras herramientas para elegir que parte de los datos cumplen con nuestros criterios de busca, mientras que los atributos representan los campos de la base de datos queremos mostrar. # Los primeros filtros head(listFilters(ensembl)) ## name description ## 1 chr_name Chromosome/scaffold name ## 2 start Start ## 3 end End ## 4 band_start Band Start ## 5 band_end Band End ## 6 marker_start Marker Start # los primeros atributos head(listAttributes(ensembl)) ## name description page ## 1 refsnp_id Variant name snp ## 2 refsnp_source Variant source snp ## 3 refsnp_source_description Variant source description snp ## 4 chr_name Chromosome/scaffold name snp ## 5 chrom_start Chromosome/scaffold position start (bp) snp ## 6 chrom_end Chromosome/scaffold position end (bp) snp Veamos si podemos elegir al azar unos 300 marcadores (SNPs) de nuestros datos y recuperar alguna información de los mismos. Elegimos un número relativamente pequeño porque la consulta es a través de una interface vía web y por lo tanto la descarga lleva su tiempo y puede aún llegar a verse interrumpida si el tiempo es excesivo. En caso de querer recuperar información de muchos marcadores a la vez, existen diferentes posibilidades, básicamente partiendo las consultas en “batchs” de tamaño adecuado y luego juntando los resultados. En nuestro caso, elegimos al azar 300 marcadores. La consulta es sencilla y se hace usando la función getBM(). Luego de hacer la consulta, elegimos representar solamente aquellos SNPs que tienen algún gen asociado. geneSNP&lt;-getBM(attributes=c(&quot;refsnp_id&quot;, &quot;associated_gene&quot;, &quot;clinical_significance&quot;,&quot;phenotype_name&quot;,&quot;associated_variant_risk_allele&quot;,&quot;p_value&quot;), filters=&quot;snp_filter&quot;, values=rownames(ngeno)[sample(1:72000,300)], mart=ensembl, uniqueRows=TRUE) head(geneSNP[geneSNP$associated_gene!=&quot;&quot;,]) ## refsnp_id associated_gene clinical_significance phenotype_name ## 10 rs1415257 NOS1AP ## 13 rs880315 CASZ1 ## 14 rs880315 CASZ1 ## 15 rs880315 CASZ1 ## 16 rs880315 CASZ1 ## 17 rs880315 CASZ1 ## associated_variant_risk_allele p_value ## 10 9.446e-05 ## 13 T 6.000e-09 ## 14 T 8.000e-12 ## 15 C 2.000e-10 ## 16 5.000e-09 ## 17 C 2.000e-26 Usando la misma idea y luego la web, identificar la información para el SNP “rs5174”. ¿Se trata de un alelo de riesgo para qué enfermedad? Pero las bases de datos y los juegos de datos disponibles son muchos. Una forma de explorar estos datos es listar las posibles bases y luego, eligiendo una, listar los juegos de datos. Por ejemplo, podemos primero listar los “Mart” posibles y luego, para alguno que nos interese listar los juegos de datos correspondientes. Como en algunos casos son muchos, conviene usar la función head() para tener idea del contenido. listMarts() ## biomart version ## 1 ENSEMBL_MART_ENSEMBL Ensembl Genes 108 ## 2 ENSEMBL_MART_MOUSE Mouse strains 108 ## 3 ENSEMBL_MART_SNP Ensembl Variation 108 ## 4 ENSEMBL_MART_FUNCGEN Ensembl Regulation 108 head(listDatasets(useMart(&quot;ENSEMBL_MART_ENSEMBL&quot;))) ## dataset description ## 1 abrachyrhynchus_gene_ensembl Pink-footed goose genes (ASM259213v1) ## 2 acalliptera_gene_ensembl Eastern happy genes (fAstCal1.2) ## 3 acarolinensis_gene_ensembl Green anole genes (AnoCar2.0v2) ## 4 acchrysaetos_gene_ensembl Golden eagle genes (bAquChr1.2) ## 5 acitrinellus_gene_ensembl Midas cichlid genes (Midas_v5) ## 6 amelanoleuca_gene_ensembl Giant panda genes (ASM200744v2) ## version ## 1 ASM259213v1 ## 2 fAstCal1.2 ## 3 AnoCar2.0v2 ## 4 bAquChr1.2 ## 5 Midas_v5 ## 6 ASM200744v2 head(listDatasets(useMart(&quot;ENSEMBL_MART_SNP&quot;))) ## dataset ## 1 btaurus_snp ## 2 btaurus_structvar ## 3 chircus_snp ## 4 clfamiliaris_snp ## 5 clfamiliaris_structvar ## 6 drerio_snp ## description ## 1 Cow Short Variants (SNPs and indels excluding flagged variants) (ARS-UCD1.2) ## 2 Cow Structural Variants (ARS-UCD1.2) ## 3 Goat Short Variants (SNPs and indels excluding flagged variants) (ARS1) ## 4 Dog Short Variants (SNPs and indels excluding flagged variants) (ROS_Cfam_1.0) ## 5 Dog Structural Variants (ROS_Cfam_1.0) ## 6 Zebrafish Short Variants (SNPs and indels excluding flagged variants) (GRCz11) ## version ## 1 ARS-UCD1.2 ## 2 ARS-UCD1.2 ## 3 ARS1 ## 4 ROS_Cfam_1.0 ## 5 ROS_Cfam_1.0 ## 6 GRCz11 listDatasets(useMart(&quot;ENSEMBL_MART_FUNCGEN&quot;)) ## dataset description ## 1 hsapiens_external_feature Human Other Regulatory Regions (GRCh38.p13) ## 2 hsapiens_mirna_target_feature Human miRNA Target Regions (GRCh38.p13) ## 3 hsapiens_regulatory_feature Human Regulatory Features (GRCh38.p13) ## 4 mmusculus_external_feature Mouse Other Regulatory Regions (GRCm39) ## 5 mmusculus_mirna_target_feature Mouse miRNA Target Regions (GRCm39) ## 6 mmusculus_regulatory_feature Mouse Regulatory Features (GRCm39) ## version ## 1 GRCh38.p13 ## 2 GRCh38.p13 ## 3 GRCh38.p13 ## 4 GRCm39 ## 5 GRCm39 ## 6 GRCm39 Si quisiésemos buscar juegos de datos del Mart “ENSEMBL_MART_SNP”, podríamos hacer mart&lt;-listDatasets(useMart(&quot;ENSEMBL_MART_SNP&quot;)) mart[grep(&quot;hsapiens&quot;,mart$dataset),] ## dataset ## 12 hsapiens_snp ## 13 hsapiens_snp_som ## 14 hsapiens_structvar ## 15 hsapiens_structvar_som ## description ## 12 Human Short Variants (SNPs and indels excluding flagged variants) (GRCh38.p13) ## 13 Human Somatic Short Variants (SNPs and indels excluding flagged variants) (GRCh38.p13) ## 14 Human Structural Variants (GRCh38.p13) ## 15 Human Somatic Structural Variants (GRCh38.p13) ## version ## 12 GRCh38.p13 ## 13 GRCh38.p13 ## 14 GRCh38.p13 ## 15 GRCh38.p13 identificando nuestro juego de datos que usamos previamente (“hsapiens_snp”), pero también otros juegos de datos de variantes estructurales y de variantes somáticas. Veamos si podemos trabajar un poquito con genes, en lugar de con variantes. Para eso, vamos a seleccionar el Mart “ensembl” y dentro de este, el juego de datos del “hsapiens_gene_ensembl”, variante del genoma humano “GRCh37. ensembl2&lt;-useEnsembl(biomart=&quot;ensembl&quot;, dataset=&quot;hsapiens_gene_ensembl&quot;, GRCh=37) # Los primeros filtros head(listFilters(ensembl2)) ## name description ## 1 chromosome_name Chromosome/scaffold name ## 2 start Start ## 3 end End ## 4 strand Strand ## 5 chromosomal_region e.g. 1:100:10000:-1, 1:100000:200000:1 ## 6 with_ccds With CCDS ID(s) # los primeros atributos head(listAttributes(ensembl2)) ## name description page ## 1 ensembl_gene_id Gene stable ID feature_page ## 2 ensembl_gene_id_version Gene stable ID version feature_page ## 3 ensembl_transcript_id Transcript stable ID feature_page ## 4 ensembl_transcript_id_version Transcript stable ID version feature_page ## 5 ensembl_peptide_id Protein stable ID feature_page ## 6 ensembl_peptide_id_version Protein stable ID version feature_page Utilizando la lista de SNPs que usamos previamente, vamos a seleccionar los genes asociados a alguna de esas variantes (SNPs) y luego vamos a buscarlos en la base de datos, extrayendo algunas características de los mismos. genesabuscar&lt;-unlist(lapply(unique(geneSNP$associated_gene),function(x) strsplit(x,&quot;,&quot;))) algunosgenes&lt;-getBM(attributes=c(&quot;ensembl_gene_id&quot;, &quot;external_gene_name&quot;,&quot;chromosome_name&quot;, &quot;description&quot;,&quot;percentage_gene_gc_content&quot;,&quot;gene_biotype&quot;), filters=&quot;external_gene_name&quot;, values=genesabuscar, mart=ensembl2, uniqueRows=TRUE) head(algunosgenes) ## ensembl_gene_id external_gene_name chromosome_name ## 1 ENSG00000179242 CDH4 20 ## 2 ENSG00000248522 SBF1P1 8 ## 3 ENSG00000088812 ATRN 20 ## 4 ENSG00000164161 HHIP 4 ## 5 ENSG00000164162 ANAPC10 4 ## 6 ENSG00000173575 CHD2 15 ## description ## 1 cadherin 4, type 1, R-cadherin (retinal) [Source:HGNC Symbol;Acc:1763] ## 2 SET binding factor 1 pseudogene 1 [Source:HGNC Symbol;Acc:31098] ## 3 attractin [Source:HGNC Symbol;Acc:885] ## 4 hedgehog interacting protein [Source:HGNC Symbol;Acc:14866] ## 5 anaphase promoting complex subunit 10 [Source:HGNC Symbol;Acc:24077] ## 6 chromodomain helicase DNA binding protein 2 [Source:HGNC Symbol;Acc:1917] ## percentage_gene_gc_content gene_biotype ## 1 51.80 protein_coding ## 2 60.70 pseudogene ## 3 40.34 protein_coding ## 4 36.07 protein_coding ## 5 37.19 protein_coding ## 6 38.96 protein_coding Veamos si existe variabilidad en el contenido G+C de los genes. ¿Qué esperas en este sentido? Si hubiese variación, será grande o pequeña? La manera más sencilla de visualizarlo es haciendo un histograma del contenido G+C: hist(algunosgenes$percentage_gene_gc_content,20,mai=&quot;contenido GC de genes seleccionados&quot;,xlab=&quot;G+C (%)&quot;,ylab=&quot;Frecuencia&quot;) Finalmente, a partir de estos datos vamos a calcular el contenido GC (o G+C) promedio de los genes que pertenecen a cada cromosoma. # Calcular el contendio GC por cromosoma boxplot(percentage_gene_gc_content~ chromosome_name,data= algunosgenes,varwidth=TRUE,xlab=&quot;Cromosoma&quot;,ylab=&quot;G+C (%)&quot;,col=colors()[sample(1:655,length(unique(algunosgenes$chromosome_name)))]) (tag&lt;-aggregate(algunosgenes$percentage_gene_gc_content,by=list(&quot;chr&quot;=algunosgenes$chromosome_name),mean)) ## chr x ## 1 1 49.72500 ## 2 2 40.72333 ## 3 4 41.58000 ## 4 5 47.07000 ## 5 6 39.06000 ## 6 7 38.55000 ## 7 8 43.61167 ## 8 10 41.36500 ## 9 12 38.13000 ## 10 13 40.02000 ## 11 15 38.96000 ## 12 17 38.41000 ## 13 18 42.32667 ## 14 19 45.97333 ## 15 20 44.70000 1.12 H-W: la frecuencia de heterocigotas en función de la frecuencia alélica (intro teórica) En un locus con dos alelos, ¿a qué frecuencia del alelo \\(p\\) podemos observar la mayor frecuencia de heterocigotas, asumiendo que la población se encuentra en equilibrio de Hardy-Weinberg? La alternativa más sencilla para tener una idea aproximada del comportamiento del número de heterocigotas bajo estos supuestos es graficar la misma como función de \\(p\\), \\(2pq=2p(1-p)\\) en cualquier software que permita graficar funciones, calculadora, o aún en una planilla electrónica, por ejemplo generando una serie en el intervalo 0-1. La figura 1.4 es el resultado de graficar esta función, donde se ve que la máxima frecuencia de heterocigotas se encuentra en el entorno de \\(p=0,5\\), o sea en frecuencias intermedias de los dos alelos y que la máxima proporción de heterocigotas esperable para una población en equilibrio de HW es \\(0,5\\). Figura 1.4: Frecuencia de heterocigotas en función de la frecuencia del alelo \\(p\\) en un modelo de un locus con dos alelos, bajo equilibrio Hardy-Weinberg. En azul la frecuencia de los heterocigotas, rojo y verde los homocigotas. Una forma más precisa, complementaria con la anterior, es el estudio analítico de esta función. Es decir, dada la función \\(f_{Het}(p)=2pq=2p(1-p)=2p-2p^2\\), podemos reconocer los extremos relativos (máximos y mínimos) de la misma como los lugares donde la pendiente de la recta tangente es igual a cero, o lo que es equivalente, los puntos donde la derivada primera se hace cero. Por lo tanto, derivando la función obtenemos: \\[\\begin{equation} \\begin{split} f_{Het}(p)=2pq=2p(1-p)=2p-2p^2\\\\ \\frac{d f_{Het}}{dp}=2-4p\\\\ 2-4p=0 \\Leftrightarrow p=\\frac{1}{2} \\end{split} \\end{equation}\\] Es decir, la función tiene un solo máximo o mínimo en \\(p=\\frac{1}{2}=0,5\\), pero para reconocer de cuál de los dos se trata es necesario ver el signo de la derivada segunda (lo que hacemos volviendo a derivar la derivada primera): \\[\\begin{equation} \\frac{d^2 f_{Het}(p)}{dp^2}=-4 \\end{equation}\\] Como el signo es negativo, se trata de un máximo. Más aún, la forma de función original (\\(f_{Het}=2p-2p^2\\)) es claramente reconocible como la de una parábola con forma de “U” invertida y cuyas intersecciones con el eje de las abcsisas (raíces) son 0 y 1, por lo que por simetría el vértice debe estar en el punto medio, es decir \\(\\frac{1}{2}\\). Sustituyendo, tenemos: \\[\\begin{equation} f_{Het_{max}}(p=\\frac{1}{2})=2pq=2 \\frac{1}{2} (1-\\frac{1}{2})= 2 \\frac{1}{2} \\frac{1}{2} = \\frac{1}{2} \\end{equation}\\] Veamos ahora que ocurre con nuestros datos. Para eso vamos a calcular la proporción de genotipos heterocigotas para cada marcador. HeteSNPs&lt;-apply(ngenot.estan,1,function(x)sum(x==1)/length(x)) Ahora, como para cada marcador ya tenemos calculada la frecuencia alélica, podemos “plotear” la frecuencia de heterocigotas observada por marcador, en función de la frecuencia alélica del marcador. Debemos recordar que al tratarese de solo dos alelos por locus, se trata de un problema simétrico respecto a qué alelo elegimos, ya que si uno tienen frecuencia \\(p\\) el otro tendrá frecuencia \\((1-p)\\) y la frecuencia esperada de heterocigotos es función \\(p(1-p)\\) (de hecho, es \\(2pq=2p(1-q)\\)). Además, podemos plotear (en rojo) la curva teórica de la frecuencia esperada. plot(freqSNPSpopmas20,HeteSNPs,col=&quot;blue&quot;,cex=0.2,xlim=c(0,1),ylim=c(0,0.5),ylab=&quot;Heterocigotas&quot;,xlab=&quot;frecuencia alélica&quot;) par(new=TRUE) curve(2*x*(1-x),0,1,col=&quot;red&quot;,xlab=&quot;&quot;,ylab=&quot;&quot;,xaxt=&quot;n&quot;,yaxt=&quot;n&quot;,lwd=1.5) par(new=FALSE) ¿Qué observas en este gráfico? ¿La proporción de heterocigotos se distribuye de acuerdo a la curva teórica (considerando la variación aleatoria) o existe un apartamiento sistemático de la misma? Claramente, como ya lo habíamos discutido antes, existe un apartamiento sistemático, con menor número de heterocigotos que los esperados. ¿A qué se debe este fenómeno? El fenómeno anterior es producto de la subsidivisión poblacional y está estrechamente relacionado con el efecto “Wahlund” (que a decir verdad es exactamente el fenómeno opuesto) y con los estadísticos \\(F\\) que veremos más adelante. Cuando en un ensemble de poblaciones, cada una de ellas se encuentra en equilibrio Hardy-Weinberg pero las frecuencias alélicas difieren entre las distintas poblaciones, el ensemble de poblaciones considerado en su conjunto como una sola gran población NO SE ENCUENTRA EN EQUILIBRIO HARDY-WEINBERG, resultando en un falta sistemática de heterocigotas. ¿Cómo puede ser que si cada población se encuentra en equilibrio Hardy-Weinberg el conjunto de individuos no lo esté? La razón es sencilla: las frecuencias esperadas para los genotipos son funciones no lineales de las frecuencias alélicas, es decir \\(p_i^2\\), \\(2p_iq_i\\) y \\(q_i^2\\), por lo que el promedio de las frecuencias alélicas no será un buen estimador del promedio de los genotipos. 1.13 Heterocigosidad Veamos ahora que ocurre con la proporción de loci heterocigotas para los distintos individuos de nuestra población. Para eso vamos a calcular primero dicha proporción: HeteIndiv&lt;-apply(ngenot.estan,2,function(x)sum(x==1,na.rm=TRUE)/length(x)) head(HeteIndiv) ## HGDP00479 HGDP00985 HGDP01094 HGDP00982 HGDP00911 HGDP01202 ## 0.2824911 0.2709695 0.2837819 0.2581296 0.2889179 0.3015106 hist(HeteIndiv,80,xlab=&quot;Heterocigosidad por individuo&quot;,main=&quot;&quot;,ylab=&quot;Frecuencia&quot;) Claramente, al observar el histograma notamos que aparentemente hay diferentes grupos de individuos con diferente nivel de heterocigosidad promedio en sus loci. Veamos si podemos identificar esto con diferentes poblaciones, por ejemplo. micol&lt;-as.factor(tb$Population.name) levels(micol)&lt;-colors()[sample(1:665,length(levels(micol)))] boxplot(HeteIndiv~tb$Population.name,col=levels(micol),varwidth=TRUE,las=2,cex.axis=0.29,xlab=&quot;&quot;,ylab=&quot;Heterocigosidad&quot;,outline=FALSE) En el boxplot anterior se observa que la distribución de los valores de heterocigosidad es diferente para distintas poblaciones, alguna con valores relativamente bajos. Ahora estamos hablando de la heterocigosidad a nivel de individuos pertenecientes a diferentes poblaciones. Una forma sencilla de cuantificar este efecto (aunque no necesariamente la mejor) es a través de la media para cada población. Veamos si identificamos las poblaciones con menor nivel de heterocigosidad observada. agHI&lt;-aggregate(HeteIndiv,by=list(&quot;Population.name&quot;=tb$Population.name),mean,na.rm=TRUE) head(agHI[order(agHI$x),],15) ## Population.name x ## 69 Surui 0.2087682 ## 35 Karitiana 0.2214389 ## 59 Papuan,Papuan Sepik 0.2226655 ## 56 Papuan 0.2260231 ## 57 Papuan Sepik 0.2264213 ## 58 Papuan,Papuan Highlands 0.2271697 ## 62 Piapoco 0.2349835 ## 63 Pima 0.2385757 ## 20 Colombian 0.2424252 ## 33 Ju|&#39;hoan North,San 0.2428591 ## 32 Ju|&#39;hoan North 0.2428660 ## 65 San 0.2432573 ## 42 Mayan,Maya 0.2489151 ## 14 Bougainville 0.2504697 ## 44 Mbuti,Mbuti 0.2569555 ¿Se te ocurre alguna explicación para interpretar las poblaciones que poseen menor heterocigosidad promedio observada? De hecho, cuando los apareamientos no son aleatorios dentro de la población hay una pérdida de heterocigotos y un aumento consiguiente de los homocigotos. El coeficiente de endogamia F es igual a la probabilidad de que los alelos en un gen cualquiera de un individuo endogámico sean idénticos-por-ascendencia (IBD). En forma equivalente, el coeficiente de endogamia es la proporción de los loci en un individuo endogámico en que los alelos son idénticos-por-ascendencia. Las nuevas frecuencias para una población con un coeficiente de endogamia F estarán dadas por \\[\\begin{equation} {fr(A_1A_1)}=p^2(1-F)+pF \\\\ {fr(A_1A_2)}=2pq(1-F) \\\\ {fr(A_2A_2)}=q^2(1-F)+qF \\end{equation}\\] En poblaciones de tamaño reducido, la endogamia se incrementa (aumenta el apareamiento entre parientes), se incrementa su coeficiente \\(F\\) y por lo tanto se reduce el número de heterocigotos respecto a lo esperado en ausencia de endogamia ya que \\(2pq(1-F)&lt;2pq\\). Si observas el ordenamiento de la tabla anterior, se trata de poblaciones de grupos indígenas diezmados con un tamaño poblacional muy reducido, por lo que en la medida de que no exista intercambio genético con otros grupos, la endogamia se incrementará. Este efecto también se puede apreciar a nivel de la super-poblaciones a las que pertenecen los distintos grupos: micol2&lt;-as.factor(tb$Superpopulation.name) levels(micol2)&lt;-colors()[sample(1:665,length(levels(micol2)))] boxplot(HeteIndiv~tb$Superpopulation.name,col=levels(micol2),varwidth=TRUE,las=2,cex.axis=0.5,xlab=&quot;&quot;,ylab=&quot;Heterocigosidad&quot;,outline=FALSE) ¿Cuáles son las poblaciones con mayor nivel de heterocigosidad? ¿Alguna hipótesis al respecto? Además del tamaño poblacional, ¿qué otros factores pueden incrementar la heterocigosidad (pensar en el fenomeno opuesto al inbreeding)? References "],["epidemio.html", "Capítulo 2 Epidemiología Genética 2.1 La estimación de frecuencias y el equilibrio (o no) 2.2 El sistema ABO (introducción teórica) 2.3 La estimación de frecuencias en el locus ABO 2.4 ClinVar 2.5 Estudios de Asociación de Genoma Completo (GWAS)", " Capítulo 2 Epidemiología Genética En el capítulo anterior vimos algunos conceptos básicos de genética de poblaciones aplicados a poblaciones humanas. En el presente capítulo vamos a intentar comenzar a aproximarnos a algunos (pocos), conceptos de epidemiología genética. De nuevo, el capítulo no tiene ninguna pretensión de ser exhaustivo y el orden de los conceptos manejados es totalmente arbitrario. 2.1 La estimación de frecuencias y el equilibrio (o no) En una población con un gran número de individuos, tendiendo a infinito, si la población se encuentra en equilibrio de Hardy-Weinberg el número de individuos de los distintos genotipos coincidirá estrechamente con las esperanzas de los mismos a partir las frecuencias de los alelos. Es decir, la variación estocástica en cada uno de los apareamientos (o en la unión de los gametos) tiende a cancelarse cuando consideramos el gran número de individuos en la población. Sin embargo, aún en esas grandes poblaciones no solemos tener acceso a la información de todos los individuos y sí, solamente, a la información de una muestra aleatoria de la misma. El concepto de muestra aleatoria es fundamental ya que será el que nos permitirá extender nuestras conclusiones de la muestra hacia la población, que en última instancia suele ser lo que nos interesa. Al trabajar con una muestra aleatoria relativamente reducida de la población, los números ahora serán mucho menores y por lo tanto los efectos del azar se verán incrementados. Supongamos, para ver el impacto del tamaño de la muestra, que tenemos interés en estimar las frecuencias de los dos alelos en un locus autosomal de una especie diploide en una población determinada. Como se trata de una especie salvaje, difícil de capturar para muestrear, nos contentamos con los 5 individuos que pudimos genotipar para este locus; sin duda es mucho mejor que no tener nada. Como se trata de una especie diploide, si tenemos \\(n\\) individuos vamos a tener \\(2n\\) alelos genotipados, es decir, en nuestro caso un total de 10 alelos genotipados. Supongamos ahora que de esos 10 alelos genotipados, 3 fueron del alelo \\(A_1\\) y 7 del alelo \\(A_2\\). Es decir, la proporción de \\(A_1\\) es igual a \\(p=3/10=0,3\\), mientras que la del alelo \\(A_2\\) es de \\(q=7/10=0,7\\) (hubiésemos llegado también a este resultado como \\(q=1-p\\)). Parece razonable usar este valor de \\(p\\) como un estimador del “verdadero valor”5 del parámetro en la población, en este caso la frecuencia del alelo \\(A_1\\), tanto que coincide con el estimador por máxima verosimilitud (es decir, escogemos como valor estimado aquel que tiene mayor probabilidad de ocurrir de acuerdo a lo que hemos observado). Ahora, ¿que certeza tenemos que este valor que estimamos esté cerca del “verdadero valor”? En principio, como solo tenemos 10 alelos genotipados, nuestras estimaciones irán de 10% en 10% (los saltos en la cuenta de alelos son de a 1, pero en 10 total, así que tenemos \\(\\frac{1}{10}=0,1=10\\%\\)). O sea, la precisión de nuestra estimación es realmente baja. Figura 2.1: Probabilidad de observar un conteo de alelos determinado en una muestra de 5 individuos (a) y en una muestra de 50 individuos (b), dado que la frecuencia del mismo en la población es de 0,5. Otra forma de ver este problema es pensar en cuál sería la probabilidad de observar este conteo de alelos \\(A_1\\), por ejemplo, dado que conocemos el verdadero valor del parámetro. Si suponemos que los individuos representan un muestreo al azar de los gametos en la población y que los individuos de la muestra fueron seleccionados al azar, entonces la probabilidad de observar un conteo \\(x\\) en particular, dado el número total de alelos genotipados \\(n\\), se puede describir por la distribución binomial (en nuestro caso de dos alelos): \\[\\begin{equation} f(x)={n\\choose x} p^x (1-p)^{n-x} \\tag{2.1} \\end{equation}\\] con las combinaciones de \\(n\\) elementos tomados de a \\(x\\) elementos iguales a: \\[\\begin{equation} {n\\choose x}=\\frac{n!}{x!(n-x)!} \\end{equation}\\] Por ejemplo, si la frecuencia “real” en la población entera para el alelo \\(A_1\\) es de \\(p=0,5\\), ¿cuál sería la probabilidad de observar este conteo de 3 alelos en los 10 que genotipamos? De acuerdo a la ecuación (2.1), la probabilidad de obtener 3 conteos en una muestra de 10, con una probabilidad \\(p=0,5\\) en la población es de: \\[\\begin{equation} f(3)={10\\choose 3} (0,5)^3 (1-0,5)^{10-3}=\\frac{10!}{7! 3!} (0,5)^3 (0,5)^{7}=\\frac{10*9*8}{6} (0,5)^{10}=0,1171875 \\sim 11,7\\%. \\end{equation}\\] Es decir, aún cuando la frecuencia real en la población es de \\(p=0,5\\), en más de 1 de cada 10 muestras que tomemos, solo por azar, observaremos un conteo de 3 alelos. Esto puede parecer poco, pero si nos fijamos en la figura 2.1(a), donde graficamos la probabilidad de observar cada uno de los 11 conteos posibles (de 0 a 10 alelos \\(A_1\\)), resulta claro que la probabilidad de no acertar en el único número correcto (5 alelos), es realmente alta. De hecho, si calculamos la probabilidad de observar exactamente 5 alelos en 10, dada la frecuencia real de \\(p=0,5\\), esta probabilidad es igual a \\(0,2460938\\), por lo que la probabilidad de obtener el “verdadero” valor de \\(p\\) en una muestra de este tamaño es igual a \\(1-0,2460938=0,7539062 \\sim 75,4\\%\\). Por otro lado, la probabilidad de tener un estimado de \\(p \\leq 0,3\\) es la suma de las probabilidades de obtener 0, 1, 2 o 3 conteos y esto es igual a \\(0,171875 \\sim 17,2\\%\\) (el lector lo puede verificar fácilmente). Claramente, de lo anterior surge que este tamaño muestral de 5 individuos no nos conducirá a nada muy razonable. ¿Qué ocurriría si conseguimos aumentar el tamaño muestral a 50 individuos? Las probabilidades esperadas de los distintos conteos en la muestra aleatoria se grafican en la figura 2.1(b). Ahora resulta claro que, por un lado, la “granularidad” de las barras es mucho más fina, es decir que la “precisión” de nuestros estimados podría ser mucho mayor y por el otro, que las estimaciones muy alejadas del “verdadero valor” son bastante improbables. Por ejemplo, ¿cuál sería la probabilidad de tener un estimado de \\(p \\leq 0,3\\)? En este caso se trata de la suma de las probabilidades de todos los conteos, de 0 a 30 (\\(30/100=0,3\\)). En decir, se trata de la función de distribución (a veces conocida como probabilidad acumulada, o también CDF en inglés), que en este caso de la binomial, para un valor \\(k\\) (30 en nuestro caso), sería \\[\\begin{equation} Pr(X \\leq k)=\\sum_{x=0}^{k} {n\\choose x} p^x (1-p)^{n-x} \\tag{2.2} \\end{equation}\\] Sería algo tedioso calcularlo a mano, pero una primer idea del valor se puede tener observando la figura 2.1(b), donde resulta claro que las probabilidades para conteos de hasta 30, son despreciables. De hecho, utilizando la función de distribución en cualquier software que la tenga implementada, la probabilidad de observar un conteo de 30 o menos alelos en 100 genotipados es de 3,92507x10-5 (\\(\\sim 0,004\\%\\)) si la frecuencia del alelo \\(A_1\\) en la población es \\(p=0,5\\); o sea, prácticamente improbable. Si bien ahora también bajó la probabilidad de acertar exactamente en un estimado de \\(p=0,5\\) (\\(Pr(x=50)=0,07958924 \\sim 8\\%\\)), si aceptamos por comparación con la muestra de 5 individuos donde la probabilidad de observar exactamente 5 alelos (probabilidades entre \\(0,45\\) y \\(0,55\\)) era de \\(\\sim 24,6\\%\\), ahora la posibilidad de observar entre 45 y 54 alelos (un intervalo de frecuencias equivalente), ahora con 50 individuos, concentra \\(\\sim 63\\%\\) de la probabilidad. O dicho de otra manera, con una probabilidad similar a la de la muestra de 5 individuos, ahora los resultados se concentrarán (aproximadamente) entre 49 y 52 alelos. Claramente, nuestras estimaciones se vuelven mucho más precisas y útiles. Hasta acá, hicimos nuestras estimaciones de las frecuencias alélicas poblacionales (y por lo tanto la posibilidad de conocer nuestras expectativas para el equilibrio de Hardy-Weinberg) de una manera bastante sencilla ya que asumimos que, genómica mediante, podemos acceder al verdadero estado alélico (ADN, por ejemplo) de cada una de las muestras. Sin embargo, en muchos casos esto no es posible (porque, por ejemplo, no se conoce la base molecular de diferencias fenotípicas) o resulta impráctico y la única información disponible es la fenotípica. Es decir, ahora solo contamos con el conteo de los distintos fenotipos. Esto introduce un nuevo factor en el problema: es necesario conocer el modelo de herencia (mendeliana, codominancia, etc.) para poder pasar de los fenotipos a los genotipos y de allí a las frecuencias de los alelos. Supongamos, para comenzar que el modelo de herencia es de codominancia en un locus autosomal con dos alelos (\\(A_1\\) y \\(A_2\\) en una especie diploide, es decir, ambos alelos se expresan en el fenotipo y hay una correspondencia biunívoca entre fenotipo y genotipo. En este caso, con dos alelos tenemos tres genotipos (que son identificables directamente), por lo que, en una muestra de \\(n\\) individuos la frecuencia relativa (muestral) del alelo \\(A_1\\) será igual a la suma de 2 veces el número de homocigotas \\(A_1\\) más el número de heterocigotas, todo dividido entre 2 veces el número de individuos: \\[\\begin{equation} \\begin{split} p=\\frac{2n_{A_1A_1}+n_{A_1A_2}}{2n}, q=\\frac{2n_{A_2A_2}+n_{A_1A_2}}{2n}\\\\ n=n_{A_1A_1}+n_{A_1A_2}+n_{A_2A_2} \\end{split} \\end{equation}\\] En todo caso, si conocemos los genotipos a nivel molecular (ver Ejemplo 2.1) la forma de resolverlo es análoga a si los genotipos se pueden “mapear” en forma biunívoca con los fenotipos (el fenotipo sería ahora igual al genotipo). Tanto si se trata de codominancia como de dominancia parcial, lo relevante aquí es la posibilidad de distinguir los heterocigotos de ambos homocigotos, lo que nos permite simplemente hacer el “conteo” de alelos, ya que la base genética es clara (en diploides, los homocigotos poseen dos alelos del mismo tipo y los heterocigotos poseen uno de cada tipo). Las cosas empiezan a complicarse un poco más cuando aparece el efecto de dominancia. Supongamos, por ejemplo, que en el locus anterior (autosomal en especie diploide, con dos alelos), el alelo \\(A_1\\) domina completamente al \\(A_2\\), es decir, tanto el \\(A_1A_1\\) como el \\(A_1A_2\\) tendrán idéntico fenotipo, mientras que el \\(A_2A_2\\) tendrá un fenotipo diferente. Ahora el “conteo” de alelos en los fenotipos no alcanza para determinar las frecuencias de los dos alelos ya que los conteos del fenotipo \\(A_1\\) corresponde al de dos genotipos (\\(G_{11}=A_1A_1\\) y \\(G_{12}=A_1A_2\\)), ambos con diferentes números de alelos \\(A_1\\) y \\(A_2\\) (2 y 0 para el homocigoto, 1 y 1 para el heterocigoto). Dicho de otra forma, sabemos calcular las frecuencias alélicas a partir de los 3 genotipos, pero solo tenemos dos fenotipos (el del alelo dominante y el del alelo recesivo). De hecho, con solo esta información se trata de un problema indeterminado y para poder salir de esta situación debemos agregar algún tipo de información adicional. Una alternativa sencilla (suponiendo que no podemos conocer los genotipos, lo que resolvería todo) es asumir que la población se encuentra en equilibrio de Hardy-Weinberg, lo que establece una relación explícita entre frecuencias alélicas (lo desconocido) y genotipos. Es decir, si la población se encuentra en equilibrio de Hardy-Weinberg sabemos que la esperanza del número de individuos (homocigotos) \\(A_2A_2\\), la única clase de genotipo que en nuestro caso “mapea” a un solo fenotipo, es igual a \\(nq^2\\), con \\(n=G_{1}.+G_{22}\\) y \\(G_{1}.=G_{11}+G_{12}\\) el número de individuos con el fenotipo dominante. Esto nos deja con la posibilidad de despejar \\(q\\), \\[\\begin{equation} G_{22}=nq^2 \\therefore q=\\pm \\sqrt{\\frac{G_{22}}{n}}=\\pm \\sqrt{\\frac{G_{22}}{G_1.+G_{22}}} \\tag{2.3} \\end{equation}\\] Es decir, de las dos raíces que tiene esta ecuación, una positiva y otra negativa, nuestra solución será la positiva, ya que no existen frecuencias negativas y por lo tanto no se trata de una solución válida. Es importante recalcar en este punto que la validez de nuestra estimación depende de que la población se encuentre en equilibrio de Hardy-Weinberg, pues de lo contrario no será una estimación que tenga alguna base teórica. Ejemplo 2.1 La fenilcetonuria (PKU) es un error innato del metabolismo que resulta en una disminución del metabolismo del aminoácido fenilalanina como resultado de una deficiencia en la enzima fenilalanina hidroxilasa. El resultado de esto es la acumulación de fenilalanina a niveles potencialmente tóxicos. Desde el punto de vista del modelo de herencia se comporta como autosómica recesiva, por lo que es necesario heredar dos copias “defectuosas” del gen PAH (a decir verdad, que tengan actividad seriamente disminuída) para que la enfermedad se manifieste. La incidencia es muy variable de población en población, pero dos casos extremos podrían ser la población de Finlandia, con 1 afectado en 200 mil nacimientos y la población de Turquía, con 1 afectado en 2600 nacimientos. Calcular para ambas poblaciones la frecuencia de “el” 6 alelo defectuoso, así como la proporción de portadores (que no manifiestan la enfermedad), asumiendo que las poblaciones se encuentran en equilibrio de Hardy-Weinberg. Solución: Utilizando la ecuación (2.3), tenemos para los dos casos \\[\\begin{equation} \\begin{split} q_{Fin}=\\sqrt{\\frac{1}{200000}}=0,002236068 \\sim 0,22\\% \\\\ q_{Tur}=\\sqrt{\\frac{1}{2600}}=0,01961161 \\sim 1,96\\% \\end{split} \\end{equation}\\] Los portadores serán los heterocigotos, por lo que, si asumimos que las poblaciones se encuentran en equilibrio de Hardy-Weinberg, entonces tendremos \\[\\begin{equation} \\begin{split} Het_{Fin}=2p_{Fin}q_{Fin}=2*(1-0,002236068)*0,002236068=0,004462136\\sim 0,45\\% \\\\ Het_{Tur}=2p_{Tur}q_{Tur}=2*(1-0,01961161)*0,01961161=0,038454 \\sim 3,85\\% \\end{split} \\end{equation}\\] En un estudio de metanálisis se identificaron diferentes estudios previos con información de la prevalencia de PKU para diferentes poblaciones del Mediterráneo oriental y panamercianas. Las prevalencias observadas fueron las siguientes: \\(21.8,15.97,10.39,6.79,19.78,7.48,4.18,6.83,1.47,19.22\\) casos por 100.000 nacidos para las mediterráneas, mientras que fue de \\(10.40,5.12,5.82,5.28,4.80,9.20\\) para las panamericanas. Vamos a estimar la frecuencia del alelo defectuoso en las diferentes poblaciones, pero ahora usando R. prevalenciasM&lt;-c(21.8,15.97,10.39,6.79,19.78,7.48,4.18,6.83,1.47,19.22)/1e5 (freqrecesivoM&lt;-sqrt(prevalenciasM)) ## [1] 0.014764823 0.012637247 0.010193135 0.008240146 0.014064139 0.008648699 ## [7] 0.006465292 0.008264381 0.003834058 0.013863621 prevalenciasA&lt;-c(10.40,5.12,5.82,5.28,4.80,9.20)/1e5 (freqrecesivoA&lt;-sqrt(prevalenciasA)) ## [1] 0.010198039 0.007155418 0.007628892 0.007266361 0.006928203 0.009591663 ¿Existen diferencias significativas entre estas poblaciones? boxplot(prevalenciasA,prevalenciasM,col=c(&quot;red&quot;,&quot;green&quot;),varwidth=TRUE) (midf&lt;-data.frame(&quot;prevalencia&quot;=c(prevalenciasA,prevalenciasM),&quot;poblacion&quot;=c(rep(&quot;A&quot;,length(prevalenciasA)),rep(&quot;M&quot;,length(prevalenciasM))))) ## prevalencia poblacion ## 1 0.0001040 A ## 2 0.0000512 A ## 3 0.0000582 A ## 4 0.0000528 A ## 5 0.0000480 A ## 6 0.0000920 A ## 7 0.0002180 M ## 8 0.0001597 M ## 9 0.0001039 M ## 10 0.0000679 M ## 11 0.0001978 M ## 12 0.0000748 M ## 13 0.0000418 M ## 14 0.0000683 M ## 15 0.0000147 M ## 16 0.0001922 M kruskal.test(prevalencia~poblacion,data=midf) ## ## Kruskal-Wallis rank sum test ## ## data: prevalencia by poblacion ## Kruskal-Wallis chi-squared = 1.4235, df = 1, p-value = 0.2328 De acuerdo al gráfico, las diferencias parecen bastante notorias (menor prevalencia para las americanas), pero sin embargo, la misma no es estadísticamente significativa. Ejercicio 2.1 En general, si bien en muchas enfermedades humanas y animales que se clasifican como de herencia mendeliana se considera que se trata de un solo alelo recesivo, a nivel molecular suelen co-existir varios alelos deletéreos que producen similar fenotipo. Demostrar que si en un locus existen dos alelos deletéreos recesivos respecto al alelo normal, bajo equilibrio de Hardy-Weinberg los resultados respecto al número de portadores y de enfermos son equivalentes a considerarlos como un solo alelo defectuoso. Solución Supongamos que llamamos \\(A_1\\) al alelo normal y \\(A_2\\) y \\(A_3\\) a los alelos defectuosos, con frecuencias respectivas \\(p\\), \\(q\\) y \\(r\\), \\(p+q+r=1\\). Llamemos \\(u=q+r\\) a la frecuencia de los dos alelos defectuosos sumados, o lo que es lo mismo, a la frecuencia de alelos defectuosos (como si fuera uno solo). De acuerdo a lo visto para más de un alelo, las frecuencias esperadas bajo equilibrio Hardy-Weinberg serán \\[\\begin{aligned} (p+q+r)^2=p^2+q^2+r^2+2pq+2pr+2qr\\end{aligned}\\] De estos genotipos, los enfermos serán aquellos que tengan 2 alelos defectuosos, sean cuales sean, o sea \\(A_2A_2\\), \\(A_3A_3\\) y \\(A_2A3\\), es decir \\[\\begin{aligned} q^2+r^2+2qr=(q+r)^2=u^2\\end{aligned}\\] Es decir, demostramos que el número de enfermos esperados es equivalente a considerarlo como un solo alelo. Ahora, el número de portadores será la suma de los genotipos que tienen un solo alelo defectuoso y el otro normal, o sea \\(A_1A_2\\) y \\(A_1A_3\\), es decir \\[\\begin{aligned} 2pq+2pr=2p(q+r)=2pu,\\end{aligned}\\] con lo que queda demostrado que también la frecuencia de portadores es equivalente a considerarlo un solo alelo defectuoso. Ejemplo 2.2 En una enfermedad con base genética de carácter recesivo fueron identificados 5 variantes (alelos) que son disruptivas a nivel de la proteína codificada. Las frecuencias de estas 5 variantes fueron las siguientes: \\(D^-_1=0.030, D^-_2=0.017, D^-_3=0.041,D^-_4=0.001,D^-_5=0.011\\). Calcular la proporción de enfermos esperada de acuerdo al equilibrio de Hardy-Weinberg. De acuerdo a lo que vimos previamente, alcanza con sumar las frecuencias de todos los alelos deletéreos recesivos y luego calcular el cuadrado de este número, es decir: fdel&lt;-c(0.030, 0.017, 0.041,0.001,0.011) names(fdel)&lt;-paste(&quot;D&quot;,1:5,sep=&quot;&quot;) sum(fdel) ## [1] 0.1 sum(fdel)^2 ## [1] 0.01 La otra forma, es calcular la proporción esperada de cada genotipo recesivo (es decir, la combinación de un alelo recesivo por parte de padre con uno recesivo de parte de madre) y sumar todos los resultados: matprop&lt;-fdel%*%t(fdel) rownames(matprop)&lt;-names(fdel) matprop ## D1 D2 D3 D4 D5 ## D1 0.00090 0.000510 0.001230 3.0e-05 0.000330 ## D2 0.00051 0.000289 0.000697 1.7e-05 0.000187 ## D3 0.00123 0.000697 0.001681 4.1e-05 0.000451 ## D4 0.00003 0.000017 0.000041 1.0e-06 0.000011 ## D5 0.00033 0.000187 0.000451 1.1e-05 0.000121 sum(matprop) ## [1] 0.01 que, obviamente, nos da el mismo resultado. Sin embargo, si las distintas combinaciones de alelos presentan diferente severidad, puede ser importante conocer las frecuencias esperadas de cada tipo de combinación. En este sentido, es muy fácil de obtener este resultado ya que lo único que tenemos que hacer es multiplicar por 2 las proporciones de los heterocigotos (porque hay dos combinaciones de alelo padre y alelo madre que producen el mismo genotipo), mientras que las frecuencias de los homocigotos (diagonla de la matriz) es la que ya aparece ahí. Una forma de hacer esto es la siguiente: upper.tri(matprop)*matprop+upper.tri(matprop,diag=TRUE)*matprop ## D1 D2 D3 D4 D5 ## D1 9e-04 0.001020 0.002460 6.0e-05 0.000660 ## D2 0e+00 0.000289 0.001394 3.4e-05 0.000374 ## D3 0e+00 0.000000 0.001681 8.2e-05 0.000902 ## D4 0e+00 0.000000 0.000000 1.0e-06 0.000022 ## D5 0e+00 0.000000 0.000000 0.0e+00 0.000121 sum(upper.tri(matprop)*matprop+upper.tri(matprop,diag=TRUE)*matprop) ## [1] 0.01 2.2 El sistema ABO (introducción teórica) En general la relación entre los distintos alelos de un locus suele ser más complicada, en principio porque existen más de dos alelos cuyo impacto en el fenotipo es distinguible, así como las relaciones entre los mismos, que muchas veces implican diferentes modos de herencia (por ejemplo, dominancia y codominancia en el mismo locus). Un ejemplo de esto es el sistema de grupos sanguíneos ABO, el más importante en humanos,7 cuya herencia (en forma simplificada) puede apreciarse en la figura 2.2. Figura 2.2: Sistema de determinación sanguínea ABO. Los alelos A y B muestran codominancia entre sí, mientras que ambos son dominantes respecto al O. Figura de Dominio Público tomada de Wikipedia (“ABO system codominance.svg”). Básicamente, mientras que tanto el alelo \\(I^A\\) como el \\(I^B\\) producen antígenos de superficie en los eritrocitos (glóbulos rojos de la sangre) , respectivamente A y B, y dominan al alelo \\(i\\) que no produce antígenos de superficie (O), la relación entre el \\(I^A\\) y el \\(I^B\\) es de codominancia, expresándose ambos antígenos en la superficie de los eritrocitos. En función de esto, tendremos desde el punto de vista fenotípico para los test de aglutinación (test inmunológico de rutina) cuatro fenotipos diferentes (supongamos que las frecuencias de \\(I^A\\), \\(I^B\\) e \\(i\\) son \\(p\\), \\(q\\) y \\(r\\) respectivamente): A, formado por los homocigotos del alelo \\(I^A\\) , más los heterocigotos del alelo \\(I^A\\) y el alelo \\(i\\) (\\(p^2+2pr\\)) B, formado por los homocigotos del alelo \\(I^B\\) , más los heterocigotos del alelo \\(I^B\\) y el alelo \\(i\\) (\\(q^2+2qr\\)) AB, formado por los heterocigotos del alelo \\(I^A\\) y el alelo \\(I^B\\) (\\(2pq\\)) O, formado por los homocigotos del alelo \\(i\\) (\\(r^2\\)) Ahora, la estimación de las tres frecuencias a partir del conteo ya no es tan sencillo como ahora. Por un lado tenemos 3 alelos en lugar de dos, pero lo que realmente complica el panorama es la relación de dominancia-codominancia entre alelos. De hecho, ya no hay un mapeo entre los homocigotos y fenotipos particulares, lo que solo ocurre en el caso del O. 2.3 La estimación de frecuencias en el locus ABO Los métodos elaborados para la estimación de las frecuencias hacen uso del concepto de máxima verosimilitud, pero (Yasuda 1984) propuso un método sencillo basado en conteo. Supongamos que \\(T=A+B+AB+O\\), es decir el total de individuos de los distintos fenotipos. Trabajaremos con la determinación de \\(p\\), la frecuencia del alelo \\(I^A\\), pero para \\(q\\) (la frecuencia del \\(I^B\\)) la situación es idéntica por simetría y basta con sustituir A por B e \\(I^A\\) por \\(I^B\\). La frecuencia del alelo \\(I^A\\) será igual a la cantidad total de alelos \\(I^A\\) en los fenotipos que tienen este alelo, es decir A (\\(I^AI^A\\)) y AO (\\(I^Ai\\)) que solo expresan el A, más el AB (\\(I^AI^B\\)) que expresa los dos alelos, todo dividido entre \\(2T\\) que es el número total de alelos en los individuos. En el primer caso hay dos alelos \\(I^A\\) por cada individuo, mientras que en los otros dos hay solo un alelo por individuo. Sin embargo, nosotros no podemos distinguir los 3 fenotipos, ya que tanto el A como el AO solo expresan el alelo \\(I^A\\), por lo que debemos buscar una forma de separar el aporte de cada uno de estos genotipos al conteo. Mientras que el \\(I^Ai\\) aporta un alelo \\(I^A\\), el \\(I^AI^A\\) aporta dos alelos, por lo que todos los fenotipos A aportarán un alelo, mientras que una cierta fracción (los homocigotos) aportará un segundo alelo también. ¿Cuál es la fracción del fenotipo A que corresponde a los homocigotas \\(I^AI^A\\)? De acuerdo a lo predicho por el equilibrio de Hardy-Weinberg, los homocigotas \\(I^AI^A\\) serán \\(p^2\\), mientras que los heterocigotas \\(I^Ai\\) serán \\(2pr\\), por lo que la fracción de homocigotas \\(h_A\\) será \\[\\begin{equation} h_A=\\frac{p^2}{p^2+2pr}=\\frac{p^2}{p(p+2r)}=\\frac{p}{p+2r} \\tag{2.4} \\end{equation}\\] Es decir, si sumamos las contribuciones de AB, todos los A y el resto de los A homocigotos, tenemos \\[\\begin{equation} p=\\frac{[AB+A+Ah_A]}{2T} \\tag{2.5} \\end{equation}\\] Si definimos a partir de los fenotipos observables A y O, \\(k_A=O/(A+O)\\), entonces podemos expresar \\(k_A\\) en términos de lo esperable bajo equilibrio Hardy-Weinberg como \\[\\begin{equation} k_A=\\frac{Tr^2}{T(p^2+2pr)+Tr^2}= \\frac{r^2}{p^2+2pr+r^2}=\\frac{r^2}{(p+r)^2}=[r/(p+r)]^2\\\\ \\therefore \\sqrt{k_A}=\\frac{r}{(p+r)} \\tag{2.6} \\end{equation}\\] ¿Cuál es la relación entre \\(h_A\\) y \\(k_A\\)? Usando las definiciones de \\(h_A\\) (ecuación (2.4)) y \\(k_A\\) (ecuación (2.6)), tenemos que \\[\\begin{equation} h_A=\\frac{p}{p+2r}=\\frac{p+r-r}{p+r+r}=\\frac{\\frac{p+r-r}{p+r}}{\\frac{p+r+r}{p+r}}=\\frac{\\frac{p+r}{p+r}-\\frac{r}{p+r}}{\\frac{p+r}{p+r}+\\frac{r}{p+r}}=\\frac{1-\\frac{r}{p+r}}{1+\\frac{r}{p+r}}=\\frac{1-\\sqrt{k_A}}{1+\\sqrt{k_A}}\\\\ h_A=\\frac{1-\\sqrt{k_A}}{1+\\sqrt{k_A}}=\\frac{(1-\\sqrt{k_A})}{(1+\\sqrt{k_A})} \\frac{(1-\\sqrt{k_A})}{(1-\\sqrt{k_A})}=\\frac{(1-\\sqrt{k_A})^2}{1-k_A} \\tag{2.7} \\end{equation}\\] ¡Excelente! Tenemos la relación entre \\(h_A\\) y \\(k_A\\) (expresada de dos formas), pero aún nos falta llegar a una forma de \\(h_A\\) que sea una función de cantidades observables, es decir los fenotipos. Si recordamos la definición de \\(k_A\\) a partir de los fenotipos observables (\\(k_A=O/(A+O)\\)) y sustituimos en la ecuación (2.7), tenemos \\[\\begin{equation} h_A=\\frac{(1-\\sqrt{k_A})^2}{1-k_A} \\Leftrightarrow h_A (1-k_A)=(1-\\sqrt{k_A})^2 \\Leftrightarrow h_A (1-\\frac{O}{A+O})=1-2\\sqrt{k_A}+k_A\\\\ h_A \\frac{A+O-O}{A+O}=1-\\sqrt{\\frac{O}{A+O}}+\\frac{O}{A+O} \\Leftrightarrow h_A \\frac{A}{A+O}=\\\\ =\\frac{A+O}{A+O} \\frac{\\sqrt{A+O}\\sqrt{O}}{\\sqrt{A+O}\\sqrt{A+O}}+\\frac{O}{A+O}=\\frac{(A+O)-2\\sqrt{O(A+O)}+O}{A+O} \\Leftrightarrow \\\\ Ah_A=A+O-2\\sqrt{O(A+O)}+O \\therefore Ah_A=A+2O-2\\sqrt{O(A+O)} \\end{equation}\\] Finalmente, si volvemos al principio con este resultado y sustituimos en (2.5), tenemos el estimador basado en conteo \\[\\begin{equation} \\hat{p}=\\frac{[AB+A+Ah_A]}{2T}=\\frac{[AB+A+A+2O-2\\sqrt{O(A+O)}]}{2T} \\therefore \\\\ \\hat{p}=\\frac{[(1/2)AB+A+O-\\sqrt{O(A+O)}]}{T} \\end{equation}\\] Analogamente, por simetría, para la estimación de \\(q\\) tenemos \\[\\begin{equation} \\hat{q}=\\frac{[(1/2)AB+B+O-\\sqrt{O(B+O)}]}{T} \\end{equation}\\] y por lo tanto, \\(\\hat{r}=1-\\hat{p}-\\hat{q}\\). Sencillo, ¿no? Ejemplo 2.3 Entre donantes de sangre de la ciudad de Ankara (Turquía) se determinó que de 1500 donantes sanos se observaron 669 del grupo A, 484 del grupo O, 232 del grupo B y 115 del grupo AB. Utilizando los estimadores que propuso (Yasuda 1984) estimar las frecuencias de los alelos \\(I^A\\), \\(I^B\\) e \\(i\\), así como el número esperado de los distintos fenotipos si la población estuviese en equilibrio de Hardy-Weinberg. Solución: \\[\\begin{equation*} \\hat{p}=\\frac{[(1/2)AB+A+O-\\sqrt{O(A+O)}]}{T}=\\frac{((115/2)+669+484-\\sqrt{(484(669+484))})}{1500}=0,3089808 \\\\ \\hat{q}=\\frac{[(1/2)AB+B+O-\\sqrt{O(B+O)}]}{T}=\\frac{((115/2)+232+484-\\sqrt{(484(232+484))})}{1500}=0,1232134 \\\\ \\hat{r}=1-\\hat{p}-\\hat{q}=1-0,3089808-0,1232134=0,5678058 \\end{equation*}\\] De acuerdo a las frecuencias estimadas previamente, el número esperado de cada fenotipo sería \\[\\begin{equation*} E(A)=(p^2+2pr)T=(0,3089808^2+2\\cdot 0,3089808\\cdot 0,5678058)\\cdot 1500=669,527 \\sim 670\\\\ E(B)=(q^2+2qr)T=(0,1232134^2+2\\cdot 0,1232134\\cdot 0,5678058)\\cdot 1500=232,6562 \\sim 233\\\\ E(AB)=2pqT=2\\cdot 0,3089808\\cdot 0,1232134\\cdot 1500=114,2117 \\sim 114 \\\\ E(O)=r^2T=0,5678058^2\\cdot 1500=483,6051=484, \\end{equation*}\\] lo que coincide estrechamente con los números observados, por lo que no podemos descartar que la población se encuentre en equilibrio Hardy-Weinberg (en general no podemos resolver a favor de una hipótesis alternativa basados en la estadística, a lo sumo podemos afirmar que la misma es completamente improbable dados los supuestos del test que aplicamos). Ejercicio 2.2 Asumiendo que las poblaciones en las que se va a aplicar se encuentran en equilibrio de Hardy-Weinberg, desarrollar un estimador de las frecuencias de los tres alelos del grupo sanguíneo ABO (\\(p\\), \\(q\\) y \\(r\\)) basado en el conteo de los individuos O y AB (desambiguando \\(p\\) y \\(q\\) si fuese necesario a través de sus respectivos conteos). ¿Qué problema obvio tiene este estimador? A partir de las siguentes frecuencias genotípicas estimar las frecuencias alélicas y fenotípicas y comentarlas en relación a los datos observados: 669 del grupo A, 484 del grupo O, 232 del grupo B y 115 del grupo AB. Solución Tanto el fenotipo O como el AB mapean cada uno a un solo genotipo, por lo que su conteo no implica suma de aportes de genotipos diferentes. Si asumimos equilibrio de Hardy-Weinberg y que \\(T=A+B+O+AB\\), \\(p+q+r=1\\), tenemos \\[\\begin{equation*} \\begin{split} AB=2pqT \\\\ O=r^2T \\Leftrightarrow r=\\sqrt{\\frac{O}{T}} \\\\ p+q+r=1 \\Rightarrow p+q+\\sqrt{\\frac{O}{T}}=1 \\Leftrightarrow \\\\ \\end{split} \\tag{2.8} \\end{equation*}\\] \\[\\begin{equation*} \\begin{split} \\Leftrightarrow p=1-q-\\sqrt{\\frac{O}{T}} \\end{split} \\tag{2.9} \\end{equation*}\\] Sustituyendo (2.9) en (2.8) para quedarnos con una sola variable (\\(q\\)), tenemos \\[\\begin{equation*} \\begin{split} 2qT(1-q-\\sqrt{\\frac{O}{T}})=AB \\Leftrightarrow 2q-2q^2-2q\\sqrt{\\frac{O}{T}}=\\frac{AB}{T} \\Leftrightarrow q^2+(\\sqrt{\\frac{O}{T}}-1)q+\\frac{AB}{2T}=0 \\\\ \\end{split} \\end{equation*}\\] Se trata de una ecuación de segundo grado, por lo que utilizando la fórmula clásica (atribuida al matemático indio Bhaskaracharya), tenemos que nuestro estimador de \\(q\\) es \\[\\begin{equation*} \\hat{q}=\\frac{(1-\\sqrt{\\frac{O}{T}}) \\pm \\sqrt{(\\sqrt{\\frac{O}{T}}-1)^2-\\frac{2AB}{T}}}{2} \\end{equation*}\\] Es de notar que esto nos deja con dos soluciones, pero como con la información que utilizamos \\(p\\) y \\(q\\) no son identificables (si hubiésemos cambiado \\(p\\) por \\(q\\) el resultado sería idéntico), debemos usar la información de conteo de A y B para desambiguar las dos soluciones de nuestro estimador (la solución mayor correponde al conteo mayor entre A y B). El defecto obvio es que nuestro estimador no hace uso de toda la información disponible, una propiedad indeseable de los estimadores que discutiremos en otro capítulo. Para determinar la frecuencia de \\(r\\) hacemos \\(r=\\sqrt{O/T}=\\sqrt{484/1500}=0,5680376\\), mientras que para las de \\(p\\) y \\(q\\) aplicamos la de nuestro estimador anterior \\[\\begin{equation} \\begin{split} \\hat{q}=\\frac{(1-\\sqrt{\\frac{O}{T}}) \\pm \\sqrt{(\\sqrt{\\frac{O}{T}}-1)^2-\\frac{2AB}{T}}}{2}=\\frac{(1-\\sqrt{\\frac{484}{1500}}) \\pm \\sqrt{(\\sqrt{\\frac{484}{1500}}-1)^2-\\frac{2*115}{1500}}}{2}=\\\\ =[0,3071654(+), 0,124797(-)] \\end{split} \\end{equation}\\] La primera correspondería a \\(p\\) (por el mayor conteo de A respecto a B). Ahora, la frecuencias esperadas de los distintos fenotipos serían \\[\\begin{equation*} \\begin{split} E(A)=(p^2+2pr)T=(0,3071654^2+2*0,3071654*0,5680376)*1500=664.9704 \\sim 665 (669)\\\\ E(B)=(q^2+2qr)T=(0,124797^2+2*0,124797*0,5680376)*1500=236,0296 \\sim 236 (232)\\\\ E(AB)=2pqT=2*0,3071654*0,124797*1500=114,2117 \\sim 115 (115)\\\\ E(O)=r^2T=0,5680376^2*1500=484,0001 \\sim 484 (484), \\end{split} \\end{equation*}\\] Por lo tanto, si bien existe un ajuste razonable en este caso particular, existen algunas diferencias respecto a los datos observados en los dos fenotipos de los cuales no usamos la información (excepto marginalmente para decidir cuál solución debería ser \\(p\\) y cuál \\(q\\)). 2.4 ClinVar Recuperar la información de la base de datos ClinVar suele ser de mucha importancia a la hora de anotar las variantes de un VCF, por ejemplo. Un paquete que me permite hacer este tipo de anotaciones es clinvaR. Para recuperar la información de la última versión, podemos hacer los siguiente: # install.packages(&quot;devtools&quot;) # devtools::install_github(&quot;jamesdiao/clinvaR&quot;) require(clinvaR) ## Loading required package: clinvaR ## Loading required package: ggplot2 ## Loading required package: dplyr ## ## Attaching package: &#39;dplyr&#39; ## The following object is masked from &#39;package:biomaRt&#39;: ## ## select ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union ## Loading required package: tidyr ## Loading required package: seqminer ## Loading required package: stringr ## Loading required package: RCurl ## ## Attaching package: &#39;RCurl&#39; ## The following object is masked from &#39;package:tidyr&#39;: ## ## complete ## The following object is masked from &#39;package:adegenet&#39;: ## ## pop ## The following object is masked from &#39;package:bit&#39;: ## ## clone ## Loading required package: knitr newest_clinvar &lt;- get_clinvar(Sys.Date()) dim(newest_clinvar) ## [1] 253110 11 newest_clinvar[1:5,] ## VAR_ID GENE CHROM POS REF ALT ID CLNSIG ## 1 1_949523_C_T ISG15 1 949523 C T rs786201005 5 ## 2 1_949608_G_A ISG15 1 949608 G A rs1921 2 ## 3 1_949739_G_T ISG15 1 949739 G T rs672601312 5 ## 4 1_955563_G_C AGRN 1 955563 G C rs539283387 3 ## 5 1_955596_C_G AGRN 1 955596 C G rs764659938 0 ## CLNDBN ## 1 Immunodeficiency_38_with_basal_ganglia_calcification ## 2 not_specified ## 3 Immunodeficiency_38_with_basal_ganglia_calcification ## 4 not_specified ## 5 not_provided ## pathogenic_incl_conflicts pathogenic_no_conflicts ## 1 TRUE TRUE ## 2 FALSE FALSE ## 3 TRUE TRUE ## 4 FALSE FALSE ## 5 FALSE FALSE Veamos que cromosomas están representados en lo recuperado del ClinVar. table(newest_clinvar$CHROM) ## ## 1 10 11 12 13 14 15 16 17 18 19 2 20 ## 19099 9615 16403 12387 8350 7538 7887 13651 17654 4287 11803 28022 4435 ## 21 22 3 4 5 6 7 8 9 MT X Y ## 3020 4468 12748 7330 13485 9463 11109 7855 11147 474 10859 21 Si queremos ver cuantas de las variantes en nuestro juego de datos de genotipos en las distintas poblaciones se encuentra en la base de datos de ClinVar y luego unir la información, podemos hacer: sum(snps$ID%in%newest_clinvar$ID) ## [1] 396 misnps.clinv&lt;-merge(snps,newest_clinvar,by=&quot;ID&quot;) dim(misnps.clinv) ## [1] 402 18 head(misnps.clinv) ## ID CHROM.x POS.x REF.x ALT.x QUAL FILTER INFO VAR_ID ## 1 rs10037067 5 89985882 1 3 &lt;NA&gt; &lt;NA&gt; PR 5_89985882_A_G ## 2 rs10063294 5 35877505 3 1 &lt;NA&gt; &lt;NA&gt; PR 5_35877505_G_A ## 3 rs10063424 5 169535522 2 4 &lt;NA&gt; &lt;NA&gt; PR 5_169535522_T_C ## 4 rs10103355 8 17918934 3 1 &lt;NA&gt; &lt;NA&gt; PR 8_17918934_A_G ## 5 rs10129889 14 102508056 2 1 &lt;NA&gt; &lt;NA&gt; PR 14_102508056_C_A ## 6 rs10138997 14 45606287 2 4 &lt;NA&gt; &lt;NA&gt; PR 14_45606287_C_T ## GENE CHROM.y POS.y REF.y ALT.y CLNSIG ## 1 ADGRV1 5 89985882 A G 255 ## 2 IL7R 5 35877505 G A 2 ## 3 FOXI1 5 169535522 T C 2, 2, 2 ## 4 ASAH1 8 17918934 A G 2, 2 ## 5 DYNC1H1 14 102508056 C A 255, 3, 3, 3 ## 6 FANCM 14 45606287 C T 2, 2 ## CLNDBN ## 1 not_specified ## 2 Severe_Combined_Immune_Deficiency ## 3 not_specified, Nonsyndromic_Hearing_Loss\\\\x2c_Mixed, Pendred&#39;s_syndrome ## 4 not_specified, Farber&#39;s_lipogranulomatosis ## 5 not_specified, Intellectual_Disability\\\\x2c_Dominant, Charcot-Marie-Tooth\\\\x2c_Type_2, Spinocerebellar_Ataxia\\\\x2c_Dominant ## 6 not_specified, Fanconi_anemia ## pathogenic_incl_conflicts pathogenic_no_conflicts ## 1 FALSE FALSE ## 2 FALSE FALSE ## 3 FALSE FALSE ## 4 FALSE FALSE ## 5 FALSE FALSE ## 6 FALSE FALSE Notar que la función merge() me permite unir ambas tablas por una columna en común (en nuestro caso, la columna “ID” que en ambas tablas posee información similar). Algunas de las columnas de la tabla recuperada de ClinVar se interpretan por si solas, pero otras requieren algo de ayuda. Los códigos de CLNSIG son los siguientes. CLNSIG: Variant Clinical Significance 0 - unknown 1 - untested 2 - non-pathogenic 3 - probable-non-pathogenic 4 - probable-pathogenic 5 - pathogenic 6 - drug-response 7 - histocompatibility 255 - other Por otro lado, la columna CLNDSDB contiene la información Variant disease database name, es decir, el nombre de enfermedad en la base de datos. Veamos si ahora podemos recuperar información de variantes con algún tipo específico de código de patogenicidad (o no). Por ejemplo, si queremos identificar en nuestro juego de datos las variantes que afectan la respuesta a drogas (CLNSIG=6), podemos hacer: misnps.clinv[grep(&quot;6&quot;,misnps.clinv$CLNSIG),] ## ID CHROM.x POS.x REF.x ALT.x QUAL FILTER INFO VAR_ID ## 8 rs10246939 7 141672604 2 4 &lt;NA&gt; &lt;NA&gt; PR 7_141672604_T_C ## 26 rs10509681 10 96798749 4 2 &lt;NA&gt; &lt;NA&gt; PR 10_96798749_T_C ## 30 rs1051740 1 226019633 4 2 &lt;NA&gt; &lt;NA&gt; PR 1_226019633_T_C ## 155 rs20455 6 39325078 1 3 &lt;NA&gt; &lt;NA&gt; PR 6_39325078_A_G ## 176 rs2234922 1 226026406 1 3 &lt;NA&gt; &lt;NA&gt; PR 1_226026406_A_G ## 371 rs7779029 7 80532112 4 2 &lt;NA&gt; &lt;NA&gt; PR 7_80532112_T_C ## GENE CHROM.y POS.y REF.y ALT.y CLNSIG ## 8 TAS2R38 7 141672604 T C 6 ## 26 CYP2C8 10 96798749 T C 6 ## 30 EPHX1 1 226019633 T C 255, 255, 255, 255, 6 ## 155 KIF6 6 39325078 A G 6, 6 ## 176 EPHX1 1 226026406 A G 2, 6 ## 371 SEMA3C 7 80532112 T C 6 ## CLNDBN ## 8 Phenylthiocarbamide_tasting ## 26 rosiglitazone_response_-_Dosage ## 30 Lymphoproliferative_disorders\\\\x2c_susceptibility_to, Preeclampsia\\\\x2c_susceptibility_to, Emphysema\\\\x2c_susceptibility_to, Pulmonary_disease\\\\x2c_chronic_obstructive\\\\x2c_susceptibility_to, carbamazepine_response_-_Dosage ## 155 atorvastatin_response_-_Efficacy, pravastatin_response_-_Efficacy ## 176 EPOXIDE_HYDROLASE_POLYMORPHISM, carbamazepine_response_-_Dosage ## 371 irinotecan_response_-_Toxicity/ADR ## pathogenic_incl_conflicts pathogenic_no_conflicts ## 8 FALSE FALSE ## 26 FALSE FALSE ## 30 FALSE FALSE ## 155 FALSE FALSE ## 176 FALSE FALSE ## 371 FALSE FALSE Recuperar las variantes patogénicas debería ser tan sencillo, sin embargo, al existir un código “5” y otro “255” la técnica que usamos antes de agarrarlas con un grep() deja de funcionar. Una alternativa podría ser la siguiente: misnps.clinv[which(misnps.clinv$CLNSIG==&quot;5&quot;),] ## ID CHROM.x POS.x REF.x ALT.x QUAL FILTER INFO VAR_ID ## 174 rs2228671 19 11210912 2 4 &lt;NA&gt; &lt;NA&gt; PR 19_11210912_C_A ## 265 rs37369 5 35037115 2 4 &lt;NA&gt; &lt;NA&gt; PR 5_35037115_C_T ## GENE CHROM.y POS.y REF.y ALT.y CLNSIG CLNDBN ## 174 LDLR 19 11210912 C A 5 Familial_hypercholesterolemia ## 265 AGXT2 5 35037115 C T 5 Beta-aminoisobutyric_aciduria ## pathogenic_incl_conflicts pathogenic_no_conflicts ## 174 TRUE TRUE ## 265 TRUE TRUE Sin embargo, esta idea nos deja afuera las patogénica con otras CLNSIG compartidas. Una alternativa más eficiente es la siguiente misnps.clinv[which(lapply(as.character(misnps.clinv$CLNSIG),function(x) sum(strsplit(x,&quot;,&quot;)[[1]]==&quot;5&quot;))&gt;0),] ## ID CHROM.x POS.x REF.x ALT.x QUAL FILTER INFO VAR_ID ## 174 rs2228671 19 11210912 2 4 &lt;NA&gt; &lt;NA&gt; PR 19_11210912_C_A ## 265 rs37369 5 35037115 2 4 &lt;NA&gt; &lt;NA&gt; PR 5_35037115_C_T ## GENE CHROM.y POS.y REF.y ALT.y CLNSIG CLNDBN ## 174 LDLR 19 11210912 C A 5 Familial_hypercholesterolemia ## 265 AGXT2 5 35037115 C T 5 Beta-aminoisobutyric_aciduria ## pathogenic_incl_conflicts pathogenic_no_conflicts ## 174 TRUE TRUE ## 265 TRUE TRUE Más aún, podemos crear una función para seleccionar códigos que nos interesan y que no aparezcan lo que no nos interesan mifilt&lt;-function(CLNSIG,yes,no) {which(lapply(as.character(CLNSIG),function(x) sum(strsplit(x,&quot;,&quot;)[[1]]%in%yes))&gt;0 &amp; !lapply(as.character(CLNSIG),function(x) sum(strsplit(x,&quot;,&quot;)[[1]]%in%no))&gt;0)} (pasan.filtro&lt;-mifilt(CLNSIG=misnps.clinv$CLNSIG,yes=c(&quot;5&quot;),no=c(&quot;255&quot;))) ## [1] 174 265 (misnps.clinv.5&lt;-misnps.clinv[pasan.filtro,]) ## ID CHROM.x POS.x REF.x ALT.x QUAL FILTER INFO VAR_ID ## 174 rs2228671 19 11210912 2 4 &lt;NA&gt; &lt;NA&gt; PR 19_11210912_C_A ## 265 rs37369 5 35037115 2 4 &lt;NA&gt; &lt;NA&gt; PR 5_35037115_C_T ## GENE CHROM.y POS.y REF.y ALT.y CLNSIG CLNDBN ## 174 LDLR 19 11210912 C A 5 Familial_hypercholesterolemia ## 265 AGXT2 5 35037115 C T 5 Beta-aminoisobutyric_aciduria ## pathogenic_incl_conflicts pathogenic_no_conflicts ## 174 TRUE TRUE ## 265 TRUE TRUE ¿Cuáles son las enfermedades asociadas a los SNPs presentes en nuestro juego de datos de poblaciones? Por ejemplo, si ahora queremos quedarnos con las variantes no-patogénicas y probablemente-no-patogénicas, utilizando nuestra función podemos hacer: (pasan.filtro&lt;-mifilt(CLNSIG=misnps.clinv$CLNSIG,yes=c(&quot;2&quot;,&quot;3&quot;),no=c(&quot;255&quot;))) ## [1] 2 7 12 14 17 21 24 25 32 34 35 38 42 43 44 46 48 49 ## [19] 50 51 52 54 57 60 64 66 67 70 73 74 76 79 80 83 86 87 ## [37] 88 93 94 95 99 100 103 107 109 114 115 116 120 121 122 124 125 128 ## [55] 129 133 135 137 144 145 146 148 150 151 153 154 157 163 165 168 169 179 ## [73] 180 182 183 184 185 186 189 191 193 194 195 196 197 198 202 206 207 211 ## [91] 213 217 222 223 225 226 227 228 229 230 231 233 236 239 241 242 243 247 ## [109] 250 253 254 255 258 259 261 266 267 270 271 274 275 276 278 280 281 283 ## [127] 284 285 290 291 293 295 297 299 301 306 309 315 317 318 319 320 323 326 ## [145] 328 329 330 332 333 336 337 340 346 347 348 349 350 354 355 356 359 360 ## [163] 361 363 364 365 366 367 368 370 372 373 374 376 378 383 384 387 389 393 ## [181] 397 398 399 400 401 misnps.clinv.23&lt;-misnps.clinv[pasan.filtro,] head(misnps.clinv.23) ## ID CHROM.x POS.x REF.x ALT.x QUAL FILTER INFO VAR_ID ## 2 rs10063294 5 35877505 3 1 &lt;NA&gt; &lt;NA&gt; PR 5_35877505_G_A ## 7 rs1014867 4 126412891 2 4 &lt;NA&gt; &lt;NA&gt; PR 4_126412891_C_T ## 12 rs1041951 18 55240505 2 4 &lt;NA&gt; &lt;NA&gt; PR 18_55240505_C_T ## 14 rs1043828 5 110464008 4 2 &lt;NA&gt; &lt;NA&gt; PR 5_110464008_T_C ## 17 rs1048006 18 57098391 1 3 &lt;NA&gt; &lt;NA&gt; PR 18_57098391_G_A ## 21 rs1049600 4 17488351 4 2 &lt;NA&gt; &lt;NA&gt; PR 4_17488351_T_C ## GENE CHROM.y POS.y REF.y ALT.y CLNSIG ## 2 IL7R 5 35877505 G A 2 ## 7 FAT4 4 126412891 C T 2 ## 12 FECH 18 55240505 C T 2 ## 14 WDR36 5 110464008 T C 2 ## 17 CCBE1 18 57098391 G A 2 ## 21 QDPR 4 17488351 T C 2 ## CLNDBN pathogenic_incl_conflicts ## 2 Severe_Combined_Immune_Deficiency FALSE ## 7 not_specified FALSE ## 12 Erythropoietic_protoporphyria FALSE ## 14 Primary_open_angle_glaucoma FALSE ## 17 Hennekam_lymphangiectasia-lymphedema_syndrome FALSE ## 21 BH4-Deficient_Hyperphenylalaninemia FALSE ## pathogenic_no_conflicts ## 2 FALSE ## 7 FALSE ## 12 FALSE ## 14 FALSE ## 17 FALSE ## 21 FALSE table(as.character(misnps.clinv.23$CLNSIG)) ## ## 2 3 ## 141 44 Veamos si ahora podemos recuperar la información de los SNPs asociados a estas enfermedades en nuestro juego de datos y analizar cómo son las frecuencias en las diferentes poblaciones de nuestra base. La idea es sencilla: recuperar los identificadores de SNPs de la tabla “misnps.clinv.5” y luego subsetear la tabla de genotipos por estos identificadores. ngenot.estan.pato&lt;-ngenot.estan[misnps.clinv.5$ID,] ngenot.estan.pato[,1:10] ## HGDP00479 HGDP00985 HGDP01094 HGDP00982 HGDP00911 HGDP01202 HGDP00461 ## rs2228671 0 0 1 0 0 0 0 ## rs37369 0 1 2 1 1 1 1 ## HGDP00986 HGDP00449 HGDP00912 ## rs2228671 0 0 0 ## rs37369 1 1 1 Ahora, vamos a calcular la frecuencia por población, para cada uno de los dos SNPs. Como solo se trata de dos SNPs, vamos a tratar cada uno en forma individual, lo que resulta muy fácil: ag.rs2228671&lt;-aggregate(ngenot.estan.pato[1,],by=list(&quot;Population&quot;=tb$Population.name),function(x)sum(x,na.rm=TRUE)/(2*length(x))) ag.rs37369&lt;-aggregate(ngenot.estan.pato[2,],by=list(&quot;Population&quot;=tb$Population.name),function(x)sum(x,na.rm=TRUE)/(2*length(x))) hist(ag.rs2228671$x,20,col=&quot;darkred&quot;,xlab=&quot;frecuencia rs2228671&quot;,ylab=&quot;Frecuencia&quot;,main=&quot;&quot;) hist(ag.rs37369$x,20,col=&quot;darkblue&quot;,xlab=&quot;frecuencia rs2228671&quot;,ylab=&quot;Frecuencia&quot;,main=&quot;&quot;) Veamos ahora si podemos ordenar estas tablas por frecuencia, para entender que poblaciones son las que tienen en mayor frecuencia cada una de las variantes. ag.rs2228671.o&lt;-ag.rs2228671[order(ag.rs2228671$x, decreasing = TRUE),] head(ag.rs2228671.o) ## Population x ## 50 Mozabite,Mozabite 0.5000000 ## 10 Bedouin B 0.2500000 ## 66 Sardinian 0.2037037 ## 1 Adygei 0.1764706 ## 8 Basque 0.1458333 ## 49 Mozabite 0.1250000 ag.rs37369.o&lt;-ag.rs37369[order(ag.rs37369$x, decreasing = TRUE),] head(ag.rs37369.o) ## Population x ## 33 Ju|&#39;hoan North,San 1.0000000 ## 42 Mayan,Maya 1.0000000 ## 63 Pima 0.7916667 ## 75 Xibo 0.7777778 ## 4 Bantu Herero 0.7500000 ## 41 Maya 0.7333333 ¿Qué comentarios te merecen estos resultados? ¿Pueden estas variantes ser muy patogénicas con las frecuencias que observamos? ¿A que se pueden deber las frecuencias extremas observadas en algunas poblaciones? ¿El valor de frecuencia relativa=1 significa que dicha variante está fijada en la población correspondiente? ¿Qué comentarios te merecen las preguntas anteriores a la luz de los siguientes resultados? sort(table(tb$Population.name)) ## ## Cambodian,Cambodian Japanese,Japanese Ju|&#39;hoan North,San ## 1 1 1 ## Luhya,Luhya Mozabite,Mozabite Papuan Sepik ## 1 1 1 ## Pathan,Pathan Bantu Herero Bantu Tswana ## 1 2 2 ## Bedouin B Bergamo Ju|&#39;hoan North ## 2 2 2 ## Mayan,Maya Mbuti,Mbuti Mongola ## 2 2 2 ## Piapoco San Papuan ## 2 2 3 ## Bantu South Africa Colombian Mongolian ## 4 5 5 ## Papuan,Papuan Highlands Papuan,Papuan Sepik Hezhen ## 6 6 8 ## Lahu Naxi Surui ## 8 8 8 ## Tuscan Bantu Kenya Bergamo Italian ## 8 9 9 ## Cambodian Dai Daur ## 9 9 9 ## Oroqen Xibo Bougainville ## 9 9 10 ## Miao Northern Han She ## 10 10 10 ## Tu Tujia Uygur ## 10 10 10 ## Yi Karitiana Mbuti ## 10 11 11 ## Pima Hazara Maya ## 12 15 15 ## Orcadian Adygei Makrani ## 15 17 20 ## Balochi Biaka Mandenka ## 21 21 21 ## Pathan Yakut Kalash ## 21 21 22 ## Sindhi Brahui Basque ## 22 23 24 ## Burusho Mozabite Russian ## 24 24 25 ## French Sardinian Han ## 27 27 33 ## African Ancestry SW Druze Palestinian ## 34 42 42 ## Bedouin Mexican Ancestry Luhya ## 43 49 72 ## Gujarati Han Chinese Toscani ## 82 83 88 ## CEPH Japanese Yoruba ## 108 112 125 Finalmente, otra alternativa interesante para la búsqueda de información sobre variantes es el paquete VarfromPDB que, sin embargo, nosotros no vamos a utilizar porque demora mucho en darnos una respuesta. El siguiente código (que no vamos a correr) es un ejemplo. if(FALSE){ #install.packages(&quot;VarfromPDB&quot;) library(&quot;VarfromPDB&quot;) clinvar.phenotype = extract_clinvar(keyword=&quot;retinoblastoma&quot;) genes.clinvar = clinvar.phenotype[[1]] print(dim(genes.clinvar)) variants.clinvar = clinvar.phenotype[[2]] print(dim(variants.clinvar)) } 2.5 Estudios de Asociación de Genoma Completo (GWAS) La información genómica nos permite realizar muchos estudios poblacionales. En particular, cuando contamos con información fenotípica de cada uno de los individuos, surge clara la idea de intentar buscar algún tipo de asociación entre variantes del genoma y los fenotipos. Estos estudios se conocen como Estudios de Asociación de Genoma Completo (GWAS). Los fenotipos pueden referirse a cualquier característica de los individuos que se aprecie directamente o aún a partir de otro tipo de análisis (por ejemplo, concentración de moléculas ynmetabolitos en sangre) aunque en muchos casos se trata de enfermedades. Dependiendo de si se trata de características de expresión continua o discreta existen una serie de alternativas para definir la significación estadística de las posibles asociaciones. El principal problema, desde el punto de vista estadístico se encuentra con replicabilidad de los resultados. Aún luego de realizar las correcciones por múltiples ensayos, suele ser necesaria la validación con un juego de datos diferentes, aunque en este caso el juego de marcadores a ensayar es también mucho menor (los que pasan un determinado valor umbral en la primera etapa). Un segundo problema tiene relación con la estructuración genética de la población. Si una determinada enfermedad presenta diferencias de prevalencia en diferentes poblaciones, todos los marcadores que sean distintivos de población (es decir, que se asocien de manera particular con las poblaciones) tenderán a estar significativamente asociados con la enfermedad, pese a que desde el punto de vista causal no tienen ninguna relación. La figura 2.3 representa los distintos pasos que son necesarios para encontrar asociación de marcadores con fenotipo a partir de un estudio del tipo GWAS Figura 2.3: Esquematización de los pasos en un estudio GWAS (figura del artículo de Uffelmann et al., 2021. De acuerdo con el trabajo de Uffelmann et al., 2021 y en particular con esta figura, los pasos se pueden describir brevemente como (extraído en forma textual, traducción nuestra): Los datos pueden recogerse a partir de cohortes de estudio o puede utilizarse la información genética y fenotípica disponible en biobancos o depósitos. Los factores de confusión (es decir, aquellas otras fuentes de variación ocultas pero que pueden incidir en los resultados) deben tenerse en cuenta cuidadosamente y las estrategias de reclutamiento no deben introducir sesgos, como el sesgo del colisionador (cuando una exposición y un resultado -o los factores que los causan- influyen cada uno en una tercera variable común y esa variable o colisionador se controla mediante el diseño o el análisis). Los datos genotípicos pueden recogerse utilizando microarrays para capturar variantes comunes, o métodos de secuenciación de próxima generación para la secuenciación del genoma completo (WGS) o la secuenciación del exoma completo (WES). El control de calidad incluye pasos en la etapa de laboratorio húmedo, como la “llamada de genotipos” y los cambios en el ADN, y etapas de laboratorio seco en la “llamada de genotipos”, como la eliminación de polimorfismos de un solo nucleótido (SNP) e individuos con problemas, la detección de estratos de población (estructuración) en la muestra y el análisis de componentes principales. Los datos genotípicos pueden ser clasificados por fases, y los genotipos no tipificados pueden ser imputados utilizando información de poblaciones de referencia emparejadas de repositorios como el Proyecto 1000 Genomas o TopMed. En este ejemplo, los genotipos de SNP1 y SNP3 se imputan basándose en los genotipos directamente ensayados de otros SNP. Las pruebas de asociación genética se ejecutan para cada variante genética, utilizando un modelo apropiado (por ejemplo, regresión aditiva, no aditiva, lineal o logística). Se corrigen los factores de confusión, incluidos los estratos de la población, y se controlan las pruebas múltiples. Los resultados se inspeccionan en busca de patrones inusuales y se generan estadísticas de resumen. Los resultados de múltiples cohortes más pequeñas se combinan utilizando conductos estadísticos estandarizados. Los resultados pueden replicarse utilizando la replicación interna o la replicación externa en una cohorte independiente. Para la replicación externa, la cohorte independiente debe estar emparejada ancestralmente (es decir, tener el mismo perfil ancestral) y no compartir individuos o miembros de la familia con la cohorte de descubrimiento. Análisis in silico de estudios de asociación de todo el genoma (GWAS), utilizando información de recursos externos. Esto puede incluir mapeo fino in silico, mapeo de SNP a genes, mapeo de genes a funciones, análisis de vías, análisis de correlación genética, aleatorización mendeliana y predicción de riesgo poligénico. Después de los GWAS, las hipótesis funcionales pueden probarse utilizando técnicas experimentales como CRISPR o ensayos reporteros masivamente paralelos, o los resultados pueden validarse en un modelo de rasgo/enfermedad humano. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
